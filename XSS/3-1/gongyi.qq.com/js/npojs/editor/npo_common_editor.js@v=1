var Gy_Editor_SetPhotocsspath ='http://gongyi.qq.com/css/npocss/set_photo.css';
var Gy_Editor_ie6blankPath = "http://gongyi.qq.com/qzeditor/ie6blank.htm";
var Gy_Editor_WindowImgPath = "http://mat1.gtimg.com/gongyi/npoimages/qqcity/blog/images/";

/*common.js*/
var FBrowser = (function() {
	var ua = navigator.userAgent.toLowerCase();
	var o = {};
	o.isStrict = document.compatMode == "CSS1Compat";
	o.isFirefox = ua.indexOf('firefox') > -1;
	o.isOpera = ua.indexOf("opera") > -1;
	o.isSafari = (/webkit|khtml/).test(ua);
	o.isSafari3 = o.isSafari && ua.indexOf('webkit/5') != -1;
	o.isIE = !o.isOpera && ua.indexOf("msie") > -1;
	o.isIE6 = !o.isOpera && ua.indexOf("msie 6") > -1;
	o.isIE7 = !o.isOpera && ua.indexOf("msie 7") > -1;
	o.isIE8 = !o.isOpera && ua.indexOf("msie 8") > -1;
	o.isGecko = !o.isSafari && ua.indexOf("gecko") > -1;
	//o.isBorderBox = o.isIE && !o.isStrict;
	//o.isWindows = (ua.indexOf("windows") != -1 || ua.indexOf("win32") != -1);
	//o.isMac = (ua.indexOf("macintosh") != -1 || ua.indexOf("mac os x") != -1);
	//o.isAir = (ua.indexOf("adobeair") != -1);
	//o.isLinux = (ua.indexOf("linux") != -1);
	//o.isSecure = window.location.href.toLowerCase().indexOf("https") === 0;
	o.isMozilla = document.all != undefined && document.getElementById != undefined && !window.opera != undefined;
	return o;
})();



function checkEmail(email){
	return /^[a-z0-9_\-]+(\.[_a-z0-9\-]+)*@([_a-z0-9\-]+\.)+([a-z]{2}|aero|arpa|biz|com|coop|edu|gov|info|int|jobs|mil|museum|name|nato|net|org|pro|travel)$/i.test(email);
}



// 兼容
//window.g_XDoc = {};
//window.g_JData = {};

String.prototype.lTrim = function() {
	return this.replace(/^\s*/, "");
};

String.prototype.rTrim = function() {
	return this.replace(/\s*$/, "");
};

String.prototype.trim = function() {
	return this.rTrim().lTrim();
};

String.prototype.getLength = function() {
	return this.replace(/[^\x00-\xff]/gi, 'xx').length;
};

// 从第start个“字符”开始截取最多len个“字节”，太长了是否(ellipsis)加省略号
String.prototype.cut = function(start, len) {
	var slen = this.length;
	var i = start;
	while (i < slen && len>0) {
		len --;
		var cc = this.charCodeAt(i);
		if(cc > 128 || (cc >=64 && cc <= 90)) len --; // 大写字母和@符号算俩字符
		i ++;
	}

	if( len > 0) return this.toString();
	return this.toString().substring(start, len==0?i:(i-1));
};

String.prototype.ellip = function(n){
	if(this.replace(/[A-Z@]/g, 'xx').getLength()<=n) return this.toString(); // 大写字母和@符号算俩字符
	else return this.cut(0, n-3)+' ...';
};

// 按10进制转换成整数
function FtoInt(v) {
	if (!v || /[^0-9]/.test(v)) return 0;
	var i = parseInt(v, 10);
	return isNaN(i) ? 0 : i;
}

window.clearRunInterval = window.clearInterval;
window.clearRunTimeout = window.clearTimeout;

/**
 * @param fn  函数的引用,函数不能用字符串引起来
 * @param dt  间隔时间
 * 
 * @return bool   正确返回true,否则返回false
 * 例子:setRunTimeout(fun,1000,1,2,4)
 */
window.setRunTimeout = function(fn, dt) {
	if (typeof(fn) != 'function') return false;
	var p = [];
	for(var l=arguments.length-1;l>=2;l--){
		p.unshift(arguments[l]);
	}
	var f = function() {
		fn.apply(null, p);
	};
	return window.setTimeout(f, dt);
};

/**
 * @param fn   函数的引用,函数不能用字符串引起来
 * @param dt  间隔时间
 * 
 * @return bool  正确返回true,否则返回false
 * 例子:setRunInterval(fun,1000,1,2,4)
 */
window.setRunInterval = function(fn, dt) {
	if (typeof(fn) != 'function') return false;
	var p = [];
	for(var l=arguments.length-1;l>=2;l--){
		p.unshift(arguments[l]);
	}
	var f = function() {
		fn.apply(null, p);
	};
	return window.setInterval(f, dt);
};

/**
 * 类型检查
 */
function Fis(v, s) {
	switch (s) {
		case 'integer':
			return typeof v === 'number' || (typeof v == 'string' && /^\d+$/.test(v));
		case 'empty':
			return v === null || v === undefined || v === '' || v === 0;
		case 'object':
			//非null非undefined的object，包含array
			return v !== null && typeof v == 'object';
		case 'array':
			return typeof v == 'object' && v !== null && typeof v.slice == 'function';
		default:
			return (typeof v == 'object' && v.constructor == s) || typeof v == s;
	}
	return false;
}

/**
 * 判断v是否存在与数组d里面
 */
function FinArray(v, d) {
	if (!Fis(d, 'array')) return false;
	for (var i = 0; i < d.length; i++) {
		if (d[i] == v) return true;
	}
	return false;
}

/**
 * 合并数组或者对象，根据第一个参数的类型
 */
function Farray_merge() {
	var args = arguments;
	if (args.length == 0) return null;
	if (args.length == 1) return args[0];
	var alen = args.length;
	var mod = 0;
	if (!Fis(args[0], 'array')) mod = 1;
	var r = mod == 1 ? {}: [];
	for (var i = 0; i < alen; i++) {
		if (!Fis(args[i], 'object')) continue;
		for (var k in args[i]) {
			if (mod == 1) r[k] = args[i][k];
			else r.push(args[i][k]);
		}
	}
	return r;
}

/**
 * 判断是否为null、undefined、空字符串、0
 */
function Fempty(v) {
	return Fis(v, 'empty');
}

function Fid(id) {
	if(id && (id.tagName || id.item)) return id;
	return document.getElementById(id);
}

function Fname(name) {
	return document.getElementsByName(name);
}

function FtagName(tagname) {
	return document.getElementsByTagName(tagname);
}

function FcreateElement(tagName, className, opt){
	var d = document.createElement(tagName);
	if(className) d.className = className;
	for(var k in opt) d[k] = opt[k];
	return d;
}

// htmlspecialchars
function FxmlEncode(s) {
	return s.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&#039;").replace(/"/g, "&quot;");
}

// htmlspecialchars_decode
function FxmlDecode(s) {
	return s.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&#0?39;/g, "'").replace(/&quot;/g, '"').replace(/&amp;/g, "&");
}

function FparseQueryString(q, filter) {
	var q = (q + '').replace(/(&amp;|\?)/g, "&").split('&');
	var p = {};
	var c = q.length;
	for (var i = 0; i < c; i++) {
		var pos = q[i].indexOf('=');
		if ( - 1 == pos) continue;
		p[q[i].substr(0, pos).replace(/[^a-zA-Z0-9]/g, '')] = unescape(q[i].substr(pos + 1));
	}
	
	if(window.SCRIPTNAME.indexOf('photo')>=0) return p;
	if(filter){
		for(var k in p){
			if(k!='tag' && k!='qq') p[k] = p[k].replace(/[^a-zA-Z0-9,_\-\.!]/g, '');
		}
	}
	return p;
}

function FgetURLArgs() {
	var sl = location.href.indexOf('&');
	var hl = location.href.indexOf('#');
	var str = '';
	if ((sl < 0 || sl > hl) && hl > 0) str = location.hash.substr(1);
	else str = location.search.substr(1);
	return FparseQueryString(str, true);
}

function FisTagName(e, tagName) {
	return e.tagName.toUpperCase() == tagName.toUpperCase();
}

/**
 * 加入一个选择项
 */
function FaddOptionToSelect(id, txt, v) {
	Fid(id).options.add(new Option(txt, v));
}

/**
 * 加入一组选择项
 */
function FaddOptionsToSelect(id, vobj) {
	if (typeof vobj != 'object') return;
	var ops = Fid(id).options;
	for (var key in vobj) ops[ops.length] = new Option(vobj[key], key);
	ops.selectedIndex = 0;
}

// 删除一个选择项
function FdeleteOptionFromSelect(id, index) {
	var ops = Fid(id).options;
	try {
		ops.remove(index);
	} catch(e) {
		Fid(id).removeChild(ops[index]);
	}
}

/**
 * 清空选择项
 */
function FclearOptionsOfSelect(id) {
	Fid(id).options.length = 0;
}

// 单选选择框选中
function FsetValueOfSelect(id, v, stat) {
	var e = Fid(id);
	if (e.multiple) return FsetValuesOfSelect(id, v, stat);
	var opts = e.options;
	var len = opts.length;
	for (var i = 0; i < len; i++) {
		if (opts[i].value == v) {
			opts.selectedIndex = opts[i].index;
			break;
		}
	}
}

// 多选选择框选中，反选
function FsetValuesOfSelect(id, v, stat) {
	var e = Fid(id);
	if (!e.multiple) return	FsetValueOfSelect(id, v, stat);
	if ((!Fis(v, 'array') && !Fempty(v))) return;
	var opts = e.options;
	var len = opts.length;
	var emp = Fempty(v);
	for (var i = 0; i < len; i++) {
		opts[i].selected = (FinArray(opts[i].value, v) || emp) == stat;
	}
}

// 单选选择框选中的值
function FgetValueOfSelect(id) {
	var e = Fid(id);
	if (e.multiple) return FgetValuesOfSelect(id);
	return e.options[e.options.selectedIndex].value;
}

// 复选选择框选中的值
function FgetValuesOfSelect(id) {
	var e = Fid(id);
	if (!e.multiple) return FgetValueOfSelect(id);
	var opts = e.options;
	var len = opts.length;
	var r = [];
	for (var i = 0; i < len; i++) {
		if (opts[i].selected) r.push(opts[i].value);
	}
	return r;
}

// 考虑全选
function FsetValuesOfCheckbox(name, v, stat) {
	var e = Fname(name);
	if (!Fis(v, 'array') && !Fempty(v)) v = [v];
	var c = e.length;
	for (var i = 0; i < c; i++) {
		if (!e[i] || e[i].type != 'checkbox') continue;
		e[i].checked = false;
		if (!v || FinArray(e[i].value, v)) e[i].checked = stat;
	}
}

function FgetValuesOfCheckbox(name) {
	var e = Fname(name);
	var v = [];
	var c = e.length;
	for (var i = 0; i < c; i++) {
		if (!e[i] || e[i].type != 'checkbox') continue;
		if (e[i].checked == true) v[v.length] = e[i].value;
	}
	return v;
}

function FsetValueOfRadio(name, v) {
	var e = Fname(name);
	var c = e.length;
	for (var i = 0; i < c; i++) {
		if (!e[i] || e[i].type != 'radio') continue;
		if (e[i].value == v) e[i].checked = true;
	}
}

function FgetValueOfRadio(name) {
	var e = Fname(name);
	var c = e.length;
	for (var i = 0; i < c; i++) {
		if (e[i].type != 'radio') continue;
		if (e[i].checked == true) return e[i].value;
	}
	return null;
}

// 对cookie的操作
function FgetCookie(name) {
	var r = new RegExp("(^|;|\\s+)" + name + "=([^;]*)(;|$)");
	var m = document.cookie.match(r);
	return (!m ? "": m[2]);
}

function FaddCookie(name, v, path, expire, domain) {
	var s = name + "=" + escape(v)
		+ "; path=" + ( path || '/' ) // 默认根目录
		+ (domain ? ("; domain=" + domain) : ''); 
	if (expire > 0) {
		var d = new Date();
		d.setTime(d.getTime() + expire * 1000);
		s += ";expires=" + d.toGMTString();
	}
	document.cookie = s;
}

window.FsetCookie = FaddCookie; // 保持php形式的setcookie

function FdeleteCookie(name, domain) {
	document.cookie = name + "=;path=/;" +(domain ? ("domain=" + domain + ";") : '') +"expires=" + (new Date(0)).toGMTString();
}

// 取得事件发生的元素
function FgetEventTarget(evt) {
	return evt.target || evt.srcElement;
}

// 屏蔽浏览器的差别
function FgetEvent(evt) {
	return window.event || evt;
}

// 判断是否左键被按下
function FisLeftKeyDown(evt) {
	return (evt.which == 1) || (evt.button == 1);
}

// 给对象增加一个事件,格式target必须是对象，evt格式"click"
function FaddEvent(e, evt, fn, isID) {
	e = isID ? Fid(e) : e;
	if (e.attachEvent) return e.attachEvent("on" + evt, fn);
	if (e.addEventListener) return e.addEventListener(evt, fn, false);
	e['on'+evt] = fn;
}

function FremoveEvent(e, evt, fun, isID) {
	e = isID ? Fid(e) : e;
	if (e.detachEvent) return e.detachEvent("on" + evt, fun);
	if (e.removeEventListener)  return e.removeEventListener(evt, fun, false);
	e['on'+evt] = null;
}

// 阻止事件向上传递
function FstopEventTransfer(evt) {
	if (evt.preventDefault) {
		evt.stopPropagation();
		evt.preventDefault();
	} else {
		evt.returnValue = false;
		evt.cancelBubble = true;
	}
}

// 禁止指定对象指定事件的传播,格式target必须是对象，evts格式"click,mousedown,mousedown"
function FstopObjectEventTransfer(e, evts) {
	if (!e || !evts) return;
	var l = evts.split(",");
	var c = l.length;
	for (var i = 0; i < c; i++) {
		var evt = l[i].trim();
		if (!evt) continue;
		var fn = function(event) {
			event = FgetEvent(event);
			FstopEventTransfer(event);
		};
		FaddEvent(e, evt, fn);
	}
}

// 设置事件捕获
function FsetEventCapture(target) {
	if (target.setCapture) target.setCapture();
	else if (!FBrowser.isFirefox && document.captureEvents) document.captureEvents(Event.MouseMove | Event.MouseUp);
}

// 释放事件捕获
function FreleaseEventCapture(target) {
	if (target.releaseCapture) target.releaseCapture();
	else if (!FBrowser.isFirefox && document.releaseEvents) document.releaseEvents(Event.MouseMove | Event.MouseUp);
}

// 判断事件是否发生在某(些)元素内，参数可以为数组
function FeventInArea(e, ele){
	if(!e || !ele) return false;
	var ismulti = Fis(ele, 'array');
	e = FgetEvent(e);
	if(!e) return;
	var t = FgetEventTarget(e);
	if(!t) return;
	while( ((ismulti && !FinArray(t, ele)) || (!ismulti && t!=ele)) && t){
		t = t.parentNode;
	}

	if((ismulti && FinArray(t, ele)) || (!ismulti && t==ele)) return true;
	return false;
}

var pageSize = {
	get	: function(){
		var e = FBrowser.isStrict ? document.documentElement: document.body;
		var keys = ['clientWidth','clientHeight','scrollWidth','scrollHeight'/*,'scrollLeft','scrollTop'*/];
		var p = {};
		for(var i in keys) p[keys[i]]	= e[keys[i]];
		p.scrollLeft = document.body.scrollLeft || document.documentElement.scrollLeft;
		p.scrollTop = document.body.scrollTop || document.documentElement.scrollTop;
		return p;
	}
};
// 获得页面窗口的大小
function FgetWindowSize() {
	var v = pageSize.get();
	return { width: v.clientWidth, height: v.clientHeight };
}

// 获得页面窗口的大小
function FgetPageSize() {
	var v = pageSize.get();
	return { width: v.scrollWidth, height: v.scrollHeight };
}

// 获得滚动的大小,此函数在IE FF中在刚刷新页面的时候不能取到真正的值，因为那时候IE FF正在初试化 opera下是正确的
function FgetScrollPostion() {
	var v = pageSize.get();
	return { left: v.scrollLeft, top: v.scrollTop };
}

// 计算出对象在页面上的位置以及宽和高
function FgetPostion(e, isID) {
	if (isID) e = Fid(e);
	var left = 0;
	var top = 0;
	var w = e.offsetWidth;
	var h = e.offsetHeight;
	do {
		top += e.offsetTop || 0;
		left += e.offsetLeft || 0;
		e = e.offsetParent;
	} while(e)
	return {
		x: left,
		y: top,
		width: w,
		height: h
	};
}

// 需要经过充分的测试，设置元素的页面位置 w=-1 h=-1不会设置这两个属性
function FsetPostion(e, x, y, w, h, isID) {
	if (isID) e = Fid(e);
	var s = e.style;
	x = x > 0 ? x: 0;
	y = y > 0 ? y: 0;
	if (s.position == "absolute") {
		s.left = x + "px";
		s.top = y + "px";
	} else if (s.position == "relative") {
		var p = FgetPostion(e.offsetParent);
		s.left = (x - p.x) + "px";
		s.top = (y - p.y) + "px";
	}
	if (w >= 0) s.width = w + "px";
	if (h >= 0) s.height = h + "px";
}

// 获得元素1相对与元素2的位置，在显示的时候没有改变
function FgetOffsetPostion(e1, e2) {
	var p1 = FgetPostion(e1);
	var p2 = FgetPostion(e2);
	return {
		x: (p1.x - p2.x),
		y: (p1.y - p2.y)
	};
}

// 把指定的元素移动到相对元素的位置
function FsetOffsetPostion(e1, e2, x, y, isID) {
	if (isID) {
		e1 = Fid(e1);
		e2 = Fid(e2);
	}
	var p = FgetPostion(e2);
	FsetPostion(e1, x + p.x, y + p.y);
}

// 设置元素到另一个元素的指定位置，按比例
function FsetOffsetPostionByRate(e1, e2, nx, ny, isID) {
	if (isID) {
		e1 = Fid(e1);
		e2 = Fid(e2);
	}
	var s1 = FgetPostion(e1);
	var s2 = FgetPostion(e2);
	FsetPostion(e1, Math.floor(s2.x + (s2.width - s1.width) / nx), Math.floor(s2.y + (s2.height - s1.height) / ny), -1, -1);
}

// 设置元素相对窗口的位置
function FsetOffsetWindowPostion(e, x, y, isID, st) {
	if (isID) e = Fid(e);
	//if(FBrowser.isIE6 || st){
		var p = FgetScrollPostion();
		FsetPostion(e, x + p.left, y + p.top, -1, -1);
	//} else {
	//	e.style.position = 'fixed';
	//	e.style.left = x + 'px';
	//	e.style.top = y + 'px';
	//}
}

// 移动元素到窗口的指定位置，只按比例
function FsetOffsetWindowPostionByRate(e, nx, ny, isID, st) {
	if (isID) e = Fid(e);
	var s = FgetWindowSize();
	FsetOffsetWindowPostion(e, Math.floor((s.width - e.offsetWidth) / nx), Math.floor((s.height - e.offsetHeight) / ny), st);
}

// 动态加载js,异步执行的，也就是说，在加载这些脚本的同时，主页面的脚本继续运行
function FloadJS(url, sucfn, failfn, charset) {
	//alert(url);
	charset = charset || 'utf-8';
	var js = document.createElement("script");
	js.charset = charset;
	js.type = "text/javascript";
	js.src = url;
	var h = FtagName('HEAD').item(0);
	if (FBrowser.isIE) {
		js.onreadystatechange = function() {
			if (!(/loaded|complete/i.test(js.readyState))) return;
			if('function' == typeof sucfn) sucfn();
			js.onreadystatechange = null; //注销回调函数，保证只执行一次
			js.parentNode.removeChild(js);
			js=null;
		};
	} else {
		js.onload = function(){
			if('function'==typeof sucfn)sucfn();
			js.parentNode.removeChild(js);
			js=null;
		};
	}

	if('function' == typeof failfn) js.onerror = function(){
		if('function'==typeof failfn) failfn();
		js.parentNode.removeChild(js);
		js=null;
	};
	h.appendChild(js);
}

function insertCSS(url) {
	if (!url) return;
	var l = FtagName('link');
	for (var i in l) {
		if (l[i].href == url) return;
	}
	var css = document.createElement("link");
	css.rel = 'stylesheet';
	css.media = 'screen';
	css.type = "text/css";
	css.href = url;
	FtagName('HEAD').item(0).appendChild(css);
}

/**
 * 插入flash的代码
 * @param {Function} cb 加载完相关js之后的操作
 */
function loadFlashJS(cb, failcb) {
	if (typeof swfobject == 'object' && typeof cb == 'function') {
		cb();
	} else {
		FloadJS('http://imgcache.qq.com/city_v1/js/swfobject.js',
		function() {
			if (typeof swfobject != 'object') {
				return;
			}
			if (typeof cb == 'function') cb();
		},
		typeof failcb == 'function' ? failcb: null);
	}
}

// 打开url，该页带hashstring的打开baseurl一致hashstring不一致的会页面不动弹
function openURL(url, newWin) {
	url = url.indexOf('http:\/\/') == 0 ? url: (url.indexOf('\/') == 0 ? ('http://' + CITY_DOMAIN + url) : (location.href + url));
	if (newWin) {
		window.open(url, '_blank');
	} else {
		if (url.indexOf('#') > 0) { //恶心点
			var p = url.substr(0, url.indexOf('#'));
			var l = location.href.indexOf('#');
			var q = location.href.substr(0, l < 0 ? location.href.toString().length: l);
			if (p == q) url = url.replace(/#/, '?');
		}
		location.href = url;
	}
}

function FloadJSON(url, sucFn, failFn, charset, cbName) {
	window[cbName || '_Callback'] = typeof sucFn == 'function' ? sucFn : null;
	FloadJS(url, null,
	function() {
		if (typeof failFn == 'function') failFn();
	}, charset || 'gb2312');
}

// 获取月份的天数，月份是1-12的数字
function getDaysOfMonth(y, m) {
	var lm = new Date(y, m - 1, 1);
	var tm = new Date(y, m, 1);
	return Math.round((tm - lm) / (24 * 3600 * 1000));
}

/**
 * 将生日转换成年龄
 * @param {Integer} bir 生日，格式1986-01-11
 */
function birToAge(bir) {
	if (!bir) return null;
	var b = bir.split('-');
	if (!b || b.length != 3) return null;
	return (new Date()).getFullYear() - b[0];
}

/**
 * 将时间戳转换成可读的时间字符串――XXXX前|XXXX后
 * @param {Integer} curTime 转换时间戳
 */
function funTime(curTime) {
	var ts = Math.floor((new Date()).getTime() / 1000) - curTime;
	var t = '前';
	if (ts < 0) {
		t = '后';
		ts = 0 - ts;
	}
	if (ts >= 24 * 3600 * 365) return Math.floor(ts / (24 * 3600 * 365)) + '年' + t;
	if (ts >= 24 * 3600 * 30) return Math.floor(ts / (24 * 3600 * 30)) + '个月' + t;
	if (ts >= 24 * 3600) return Math.floor(ts / (24 * 3600)) + '天' + t;
	if (ts >= 3600) return Math.floor(ts / 3600) + '小时' + t;
	if (ts >= 60) return Math.floor(ts / 60) + '分钟' + t;
	if (ts >= 0) return t == '前' ? '刚刚': '1分钟内';
}

/**
 * 格式化时间戳
 * @param {Integer} ts 待转换时间戳
 * @param {String} fstr 格式串如y-m-d h:i:s 不区分大小写
 */
function formatTime(ts, fstr) {
	var d = getDetailDateTime(ts);
	var r = {
		y: d.year,
		m: d.month,
		d: d.date,
		h: d.hour,
		i: d.minute,
		s: d.sec,
		w: d.week
	};
	r.h = (r.h >= 10 ? '': '0') + r.h;
	r.i = (r.i >= 10 ? '': '0') + r.i;
	r.s = (r.s >= 10 ? '': '0') + r.s;
	return fstr.replace(/(?!\\)(y|m|d|h|i|s|w)/gi,
	function(a0, a1) {
		return r[a1.toLowerCase()];
	});
}

/**
 * 时间戳转换成时间对象
 */
function getDetailDateTime(t) {
	var week = ["星期天", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"];
	var d = new Date(t * 1000);
	return {
		year: d.getFullYear(),
		month: d.getMonth() + 1,
		date: d.getDate(),
		hour: d.getHours(),
		minute: d.getMinutes(),
		sec: d.getSeconds(),
		week: week[d.getDay()]
	};
}

function getLeaveDay(t) {
	var t1 = Math.floor((new Date()).getTime() / 1000);
	var diff = t - t1;
	if (diff <= 0) {
		return "报名结束";
	}
	var d = Math.floor(diff / 86400);
	if (d > 0) return "还有" + d + "天";
	var h = Math.floor(diff / 3600);
	if (h > 0) return "还有" + h + "小时";
	var m = Math.floor(diff / 60);
	if (m > 0) return "还有" + m + "分钟";
	return '报名结束';
}

function copyText(txt) {
	if (window.clipboardData) {
		clipboardData.clearData();
		clipboardData.setData("Text", txt);
		return true;
	} else if (window.netscape) {
		try {
			netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		} catch(e) {
			alert("您的firefox安全限制限制您进行剪贴板操作，请在地址栏输入’about:config’将’signed.applets.codebase_principal_support设置为’true’之后重试");
			return false;
		}
		var clip = Components.classes['@mozilla.org/widget/clipboard;1'].createInstance(Components.interfaces.nsIClipboard);
		if (!clip) return;
		var trans = Components.classes['@mozilla.org/widget/transferable;1'].createInstance(Components.interfaces.nsITransferable);
		if (!trans) return;
		trans.addDataFlavor('text/unicode');
		var str = Components.classes["@mozilla.org/supports-string;1"].createInstance(Components.interfaces.nsISupportsString);
		str.data = txt;
		trans.setTransferData("text/unicode", str, txt.length * 2);
		var clipid = Components.interfaces.nsIClipboard;
		if (!clip) return false;
		clip.setData(trans, null, clipid.kGlobalClipboard);
		return true;
	}
	return false;
}











/*component_myfor.js*/

// 加载扩展js功能
function loadExtJs(func){
	/*这里主要是扩张加载图片对像的之前加载自己的功能js  不用可以取消直接加载func()即可*/
	/*
	if(!window.extJsLoaded){
		showLoadingWin('请稍候...');
		FloadJS('http://'+jsImgcacheDomain+'/object_plus/ext_ord_v2.js', function(){ hideLoadingWin();if(typeof func == 'function') func() }, function(){ alert('初始化失败');});
	} else func();*/

	//showLoadingWin('请稍候...');
	func();
}

function loadAppJs(appname, func, classname){
	/*
	classname = classname || appname; 
	if(window[classname]){
		func();
	} else {
		showLoadingWin('请稍候...');
		FloadJS('http://'+jsImgcacheDomain+'/city_v1/js/app/'+appname+'.js', function(){ hideLoadingWin();if(typeof func == 'function') func() }, function(){ alert('操作失败');}, 'UTF-8');

	}*/

	/*这里主要是扩张加载音乐对像的之前加载自己的功能js  不用可以取消直接加载func()即可*/

	func();
}


function loadMusicJs(func){
	loadAppJs('musicUtil', func);
}





var g_alumbjs_loaded = 0;
function loadAlumbJS(cb){
	if(g_alumbjs_loaded ==3) {
		cb();
	} else {
		//调用相册接口，答复：为了避免相册接口cgi的数据返回格式更改带来的问题，必须使用这种方式，痛苦啊~~
		FloadJS('http://imgcache.qq.com/ac/qzone/qzfl/qzfl_2.1.1.5.js', function(){
			if(window.QZONE && !window.QZFL) window.QZFL = QZONE;
			QZFL.media = QZFL.media || {};
			QZFL.media.getFlashHtml = QZFL.media.getFlashHtml || function(){ return '';};

			g_alumbjs_loaded |= 1;
			if(g_alumbjs_loaded ==3)
				cb();
			else FloadJS('http://imgcache.qq.com/qzone/photo/logic/photoLogic.js', function(){
				g_alumbjs_loaded |= 2;
				PhotoLogic.setConfig({
					projectId:116,
					pageId:1,
					refer:"gongyi"
				});
				cb();
			}, null, 'utf-8');
		}, null, 'utf-8');
	}
}

var drag = {
	// 每次拖拽仅限一个元素，不能同时拖拽多个元素
	// 当前拖拽元素
	_curEle	: null,
	// 响应拖拽的元素
	_curEleLauncher	: null,
	// 初始横坐标
	_x	: 0,
	// 初始纵坐标
	_y	: 0,
	_opt	: {},
	// 移动中
	_moving	: function(e){
		var pw = drag._curEle;
		if(!pw) return;
		e = FgetEvent(e);
		var sp=pageSize.get();
		var sl=sp.scrollLeft;
		var st=sp.scrollTop;
		if(pw.style.position=='fixed'){
			sl=0;
			st=0;
		}
		var x=drag._x+e.clientX+sl;
		var y=drag._y+e.clientY+st;
		// 限制在可见区域内
		x=Math.min(Math.max(x, sl), sp.clientWidth - pw.offsetWidth + sl);
		y=Math.min(Math.max(y, st), sp.clientHeight - pw.offsetHeight + st);
		pw.style.left = x+'px';
		pw.style.top = (pw.style.position=='fixed' ? (y>0?y:0) : y)+'px';
		FstopEventTransfer(e);
	},
	// 开始移动
	_start	: function(e){
		var w=drag._curEle;
		var h=drag._curEleLauncher;
		if(!w || !h) return;
		e=FgetEvent(e);
		var p=pageSize.get();
		var sl=p.scrollLeft;
		var st=p.scrollTop;
		if(w.style.position=='fixed'){
			sl=0;
			st=0;
		}
		drag._x=w.offsetLeft-e.clientX-sl;
		drag._y=w.offsetTop-e.clientY-st;
		
		var d = h&&h.setCapture?h:document;
		FaddEvent(d,'mousemove',drag._moving);
		FaddEvent(d,'mouseup',drag._stop);
		FaddEvent(h,'losecapture',drag._stop);
		FsetEventCapture(h);

		FstopEventTransfer(e);
	},
	// 停止移动
	_stop	: function(e){
		var h = drag._curEleLauncher;
		if(!h) return;
		e=FgetEvent(e);

		var d = h&&h.setCapture?h:document;
		FremoveEvent(d,'mousemove',drag._moving);
		FremoveEvent(d,'mouseup',drag._stop);
		FremoveEvent(h,'losecapture',drag._stop);
		FreleaseEventCapture(h);
		drag._curEle = null;
		drag._curEleLauncher = null;

		if(typeof drag._opt.onstop == 'function') drag._opt.onstop.apply(h);
		drag._x = 0;
		drag._y = 0;
	},
	/**
	 * 设置可移动
	 * @param e {Element} 移动元素
	 * @param el {Element} 响应移动的元素
	 */
	enable	: function(e, el, opt){
		if(typeof el == 'string') el = Fid(el);
		if(typeof e == 'string') {
			if(!el) el = Fid(e+'_head');
			e = Fid(e);
		}
		if(!e || !el) return;
		this._opt = opt || {};
		el.onmousedown = function(ee){
			drag._curEle = e;
			drag._curEleLauncher = el;
			drag._start(ee);
		};
	}
};

function FenableDrag(w, h){
	drag.enable(w, h);
}

// 多层pop的问题，给modal加个计数器，需要modal统一对整个窗口，否则无需modal
function FsetModal(e,isID,wid,forcezIndex,noscroll)
{
	if(!FBrowser.isIE6 && !FBrowser.isOpera && !forcezIndex) return;
	if(e && isID==true) e=Fid(e);
	var p=0;
	if(!e){
		if(!wid) wid="$_modal_$";
		FunsetModal(wid);
		//if(noscroll) document.documentElement.style.overflow = 'hidden';
		p=pageSize.get();

		var w=Fid(wid);
		if(Fempty(w)){
			w=document.createElement('div');
			w.id=wid;
			w.style.cssText = 'position:absolute;filter:alpha(opacity=50);-moz-opacity:0.3;opacity:0.3;background:#ECECEC;z-index:'+(forcezIndex||99);
			document.body.insertBefore(w, document.body.firstChild);
		}
		w.noscroll = noscroll;
		FsetPostion(w,0,0,p.scrollWidth,p.scrollHeight);
		//FsetPostion(w,p.scrollLeft,p.scrollTop,p.clientWidth,p.clientHeight);
		if(FBrowser.isIE6)
			w.innerHTML='<iframe scrolling="no" style="z-index:99" border="0" frameborder="0" width="'+p.clientWidth+'" height="'+p.clientHeight+'" src="about:blank"></iframe>';
		else if(FBrowser.isOpera)
			w.innerHTML='<img src="'+Gy_Editor_WindowImgPath+'icon_blank.gif" onmousedown="return false;" galleryimg="no" style="z-index:99" width="'+p.clientWidth+'" height="'+p.clientHeight+'"/>';
		w.counter = (w.counter || 0 ) + 1;
	}else{
		var l = e.lastChild;
		if(l&&l.modal==1) {
			l.style.width = e.offsetWidth+'px';
			l.style.height = e.offsetHeight+'px';
			return;
		};
		if(FBrowser.isIE6){
			var x = FcreateElement('iframe', '', {
				scrolling	: 'no',
				border	: 0,
				frameBorder	: 0,
				width	: '100%',
				height	: '100%',
				modal	: 1,
				src	: 'about:blank'
			});
			x.style.cssText = 'position:absolute;background:#fff;left:-1;top:-1;z-index:-1;filter:alpha(opacity=0);width:'+e.offsetWidth+'px;height:'+e.offsetHeight+'px';
			e.appendChild(x);
		} else if(FBrowser.isOpera){
			var x = FcreateElement('img', '', {
				galleryimg	: 'no',
				width	: '100%',
				height	: '100%',
				modal	: 1,
				src	: Gy_Editor_WindowImgPath+'icon_blank.gif',
				onmousedown	: function(){return false}
			});
			x.style.cssText='position:absolute;border:0;left:0;top:0;z-index:-1;filter:alpha(opacity=0);width:'+e.offsetWidth+'px;height:'+e.offsetHeight+'px';
			e.appendChild(x);
		}
	}
}

//关闭模态窗口,分为两种：一种是整个屏幕，一种是对指定元素
function FunsetModal(wid){
	var e=(Fempty(wid)?Fid('$_modal_$'):Fid(wid));
	if(e && (!e.counter||e.counter<=1)) {
		if(e.noscroll && document.documentElement.style.overflow == 'hidden') document.documentElement.style.overflow =  'scroll';
		document.body.removeChild(e);
	}

	if(e && e.counter>1) e.counter --;
}

function hideTipwin(winid, onlyclose){
	tipWinOp(winid, 'close', onlyclose);
}

function submitTipwin(winid){
	tipWinOp(winid, 'submit');
}

function cancelTipwin(winid){
	tipWinOp(winid, 'cancel');
}

function tipWinOp(winid, op, onlyclose){
	if(op!='close'&&op!='submit'&&op!='cancel') return;
	var win = Fid(winid);
	if(Fempty(win)) return;
	var passed = true;
	if(!onlyclose && typeof win['cOn'+op]=='function') {
		passed = win['cOn'+op]();
	}

	if(passed!==false) {
		FunsetModal(winid+'_modal_$');
		win.posited=false;
		win.style.display = 'none';
	}
}

/**
 * 弹出框
 * @param {String} winid
 * @param {String} content
 * @param {Object} properties
 * properties属性内容：
 * {
	 width宽度0为默认,
 height高度0为默认,
 tiptitle弹出框标题,
 onsubmit确定动作,
 onclose关闭动作,
 oncacel取消操作,
 winclass弹出框额外样式,
 contentclass弹出框内容额外样式,
 okbtntxt确定按钮文字,
 canbtntxt取消按钮文字,
 btns按钮显示方式,
 exthtml额外操作(样式只支持链接)};
 其中btns为0 无按钮 1 确定 2 取消 3 确定+取消
 */
function createTipwin(winid, content, properties){
	if(!properties || typeof properties!='object') properties = {};
	var pr = properties;
	winid = winid || ('$_tip__$'+Math.floor(Math.random()*100));
	var win = Fid(winid);
	if(Fempty(win)){
		win = document.createElement('div');
		win.id = winid;
		win.className = pr.winclass||'pop';
		win.style.position = 'absolute';
		win.style.zIndex = 101;
		win.style.display = 'none';
		document.body.insertBefore(win, document.body.firstChild);
	}
	
	if(pr.width>0) win.style.width = pr.width+'px';
	if(pr.height>0) win.style.height = pr.height+'px';
	if(typeof pr.onsubmit=='function') win.cOnsubmit = pr.onsubmit;
	else win.cOnsubmit = null;
	if(typeof pr.onclose=='function') win.cOnclose = pr.onclose;
	else win.cOnclose = null;
	if(typeof pr.oncancel=='function') win.cOncancel = pr.oncancel;
	else win.cOncancel = null;
	var htm = ['<div id="'+winid+'_head" class="title"><div class="tit_box"><h4 id="'+winid+'_title">'+(pr.tiptitle||'提示')+'</h4><button type="button" title="关闭" class="close" onclick="hideTipwin(\''+winid+'\')"><span>关闭</span></button></div></div>'];
	htm.push('<div class="'+(pr.contentclass || 'content')+'" id="'+winid+'_content">'+(content||'')+'</div>');
	if((pr.btns&&pr.btns!=0) || !!pr.exthtml){
		htm.push('<div class="btn bg_2 bor_t_2">');
		if(pr.exthtml) htm.push(pr.exthtml);
		if((pr.btns&1)==1) {
			var otl = (pr.okbtntxt || '确定').getLength();
			var btclass = 'bt1_2em';
			if(otl<=12 && otl>=4) btclass = 'bt1_'+Math.ceil(otl/2)+'em';
			htm.push('<button class="'+btclass+'" onclick="submitTipwin(\''+winid+'\')">'+(pr.okbtntxt||'确定')+'</button>');
		}
		if((pr.btns&2)==2) {
			var otl = (pr.canbtntxt || '取消').getLength();
			var btclass = 'btn_weak_s2';
			if(otl<=12 && otl>=4) btclass = 'btn_weak_s'+Math.ceil(otl/2);
			htm.push('<button class="'+btclass+'" onclick="cancelTipwin(\''+winid+'\')">'+(pr.canbtntxt||'取消')+'</button>');
		}
		htm.push('</div>');
	}
	
	win.innerHTML = htm.join('');
	win.style.display = 'block';
	FsetModal(win);
	FenableDrag(winid);
	if(!win.posited) { FsetOffsetWindowPostionByRate(win,2,2);win.posited=true; }
}
// 插入iframe的弹出层
function createTipwinWithIframe(winid, iframeid, width, height, tiptitle, onclose, className){
	iframeid = iframeid || (winid+'_iframe');
	createTipwin(winid, '<iframe name="'+iframeid+'" id="'+iframeid+'" frameborder="0" scrolling="no" width="100%"'+(height>0 ? ' height="'+(height-28)+'" ' : '')+' src="about:blank"></iframe></div>',
		{
			width : width,
			height : height,
			tiptitle : tiptitle,
			onclose : function(){ Fid(iframeid).src='about:blank';if(typeof onclose=='function') return onclose();}
		});
	if(height=='auto'){
		Fid(winid).sizeinterval = setInterval("try{var f = Fid('"+iframeid+"');Fid('"+winid+"').style.height=f.contentWindow.document.body.scrollHeight+28+'px';var tmph=f.height;f.height=f.contentWindow.document.body.scrollHeight+'px';if(tmph&&tmph!=f.height)FsetOffsetWindowPostionByRate(Fid('"+winid+"'),2,3);}catch(e){}",500);
	}
}
/**
 * 创建隐藏表单元素
 */
function createHiddenInput(obj, p, prefix){
	// prefix = prefix==null ? '' : prefix;
	prefix = prefix ? (prefix+'[') : '';
	var nfix = prefix ? ']' : '';
	if(!Fis(obj, 'object') || !p) return;
	for(var i in obj){
		if(Fis(obj[i], 'object')){
			createHiddenInput(obj[i], p, prefix+i+nfix);
		} else {
			var ht=document.createElement('input');
			ht.type='hidden';
			ht.name=prefix+i+nfix;
			p.appendChild(ht);
		}
	}
}

//创建表单post数据
function postForm(url, postData, callback){
	var rx = /(\?|&)callback=(.*?)(&|$)/;
	var regcb = url.match(rx);
	if(regcb && regcb.length==4 && (url.indexOf('http://')<0 || url.indexOf(CITY_DOMAIN)>=0 || url.indexOf(U_CITY_DOMAIN)>=0 || url.indexOf(U1_CITY_DOMAIN))){
		url = url.replace(rx, '&selfcallback=1$3');
	}

	var selfcbMode = false;
	if(/(\?|&)selfcallback=(.+?)(&|$)/.test(url)) selfcbMode = true;
	
	postForm.sid = (postForm.sid || 0) + 1;
	var ifrId = selfcbMode ? ('postIfr_'+postForm.sid) : 'postIfr'; // ifrForm这个名称是和php层统一，不更改

	var ifr=Fid(ifrId);
	if(!ifr){
		ifr=FcreateElement('iframe', '', {
			id	: ifrId,
			name	: ifrId
		});

		ifr.style.display='none';
		document.body.insertBefore(ifr, document.body.firstChild);
		try{window.frames[ifrId].name=ifrId;}catch(e){}
		if(selfcbMode) {
			ifr.sid = postForm.sid;
			ifr.callback = function(o){
				if(typeof this.opcallback == 'function') this.opcallback(o);
				var f = Fid('postform_'+this.sid);
				ifr.contentWindow.location.replace('about:blank');
				var rmFun = function(){
					f.parentNode.removeChild(f);
					ifr.parentNode.removeChild(ifr);
					ifr = null;
					f = null;
					rmFun = null;
				};

				if(FBrowser.isIE) rmFun();
				else ifr.onload = rmFun;
			};
		}
	}

	if(selfcbMode) ifr.opcallback = callback ? callback : (regcb ? window[regcb[2]] : null);
	
	var pid = selfcbMode ? ('postform_'+postForm.sid) : 'postform'; // postform这个名称是和php层统一，不更改
	var p = Fid(pid);
	if(!p){
		p = FcreateElement('form', '', {
			id	: pid,
			target	: ifrId,
			method	: 'post'
		});
		p.style.display='none';
		document.body.insertBefore(p, document.body.firstChild);
	}

	p.action=url;
	var hs = p.childNodes;
	var l = hs.length;
	for(var h=l-1;h>=0;h--){
		if(hs[h]&&hs[h].tagName&&hs[h].tagName.toLowerCase()=='input' && hs[h].type.toLowerCase()=='hidden') p.removeChild(hs[h]);
	}
	createHiddenInput(postData, p);

	var o=p.childNodes;
	for(var i=0;i<o.length;i++){
		var x=o[i].name;
		var f=x.indexOf('\[');
		var tmp = postData;
		if(f>=0 && x.indexOf('\]')>f+1){
			tmp = tmp[x.substr(0, f)];
			var arr = x.match(/(?=\[)(.+?)(?=\])/g);
			if(arr!=null){
				for(var j=0;j<arr.length;j++){
					arr[j] = arr[j].replace(/[\[\]]/g, '');
					tmp = tmp[arr[j]];
				}
				if(tmp!=null) o[i].value=tmp;
			}
		} else {
			tmp = tmp[x];
			if(tmp!=null) o[i].value=tmp;
		}
	}


	// hack
	if(FBrowser.isIE6){
		ifr.ie6callback = function(){
			try{window.frames[ifrId].name=ifrId;}catch(e){}
			p.target = ifrId;
			p.submit();
		};

		//ifr.src = 'http://imgcache.qq.com/city_v1/static/ie6blank.html';

		ifr.src = Gy_Editor_ie6blankPath;
	} else
		p.submit();
}
//=======年月日选择
function addYearOpts(id, epval, eptxt){
	var ny = (new Date()).getFullYear();
	FclearOptionsOfSelect(id);
	var y = {};
	for(var i=ny-5; i>=ny-90; i--){
		y[i] = i+'年';
	}
	setListOfSelect(id, y, epval, eptxt);
}

function addMonthOpts(id, epval, eptxt){
	FclearOptionsOfSelect(id);
	var m = {};
	for(var i=1; i<=12; i++){
		m[i] = i+'月';
	}
	setListOfSelect(id, m, epval, eptxt);
}

function setDayOpts(yid, mid, did, epval, eptxt){
	var y = FgetValueOfSelect(yid);
	var m = FgetValueOfSelect(mid);
	if(y<=0 || m <=0) {
		setListOfSelect(did, {}, 0, eptxt ? eptxt : '请选择');
		return;
	}
	var max = getDaysOfMonth(y, m);
	var d = {};
	for(var i=1;i<=max;i++){
		d[i] = i+'日';
	}
	setListOfSelect(did, d, epval, eptxt);
}

function setDateSelection(yid, mid, did, y, m, d, epval, eptxt){
	addYearOpts(yid, epval, eptxt);
	addMonthOpts(mid, epval, eptxt);
	if(y>0) FsetValueOfSelect(yid, y);
	if(m>0) FsetValueOfSelect(mid, m);
	setDayOpts(yid, mid, did, epval, eptxt);
	if(d>0) FsetValueOfSelect(did, d);

	Fid(yid).onchange = function(){ setDayOpts(yid, mid, did, epval, eptxt);};
	Fid(mid).onchange = function(){ setDayOpts(yid, mid, did, epval, eptxt);};
}

function setBirthSelection(yid, mid, did, birthday, epval, eptxt){
	var bir = birthday.split('-');
	if(bir.length!=3) return;
	setDateSelection(yid, mid, did, FtoInt(bir[0]), FtoInt(bir[1]), FtoInt(bir[2]), epval, eptxt);
}
//========年月日选择end
//地区选择，国外、国内
//外国列表
function addFrgOpts(id, epval, eptxt){
	var fs = getCityList(99);
	if(!fs) return;
	setListOfSelect(id, fs, epval, eptxt);
}

function addStateOpts(fid, sid, epval, eptxt){
	var f = FgetValueOfSelect(fid);
	if(f<=0){
		setListOfSelect(sid, {}, 0, eptxt ? eptxt : '请选择');
		return;
	}

	var ss= getDistrictList(f);
	setListOfSelect(sid, ss, epval<0 ? (p+'00') : epval, eptxt);
}

function setForeignLoc(fid, sid, st, epval, eptxt){
	addFrgOpts(fid, epval, eptxt);
	if(st>990000){
		FsetValueOfSelect(fid, Math.floor(st/100));
	}
	addStateOpts(fid, sid, epval, eptxt);
	if(st>990000){
		FsetValueOfSelect(sid, st);
	}
	Fid(fid).onchange = function(){ addStateOpts(fid, sid, epval, eptxt);};
	// FaddEvent(fid, 'change', function(){ addStateOpts(fid, sid, epval, eptxt);}, true);
}

function addProvOpts(id, epval, eptxt, pl, flag){
	var ps = getProvinceList();
	if(flag===true) delete ps[99];
	delete ps[0];
	setListOfSelect(id, ps, epval, eptxt);
}

//涉及三级区域请使用addDistrictOpts
function addCityOpts(pid, cid, epval, eptxt){
	var p = FgetValueOfSelect(pid);
	if(p<=0){
		setListOfSelect(cid, {}, 0, eptxt ? eptxt : '请选择');
		return;
	}

	var cs = getCityList(p);
	setListOfSelect(cid, cs, epval<0 ? (p+'00') : epval, eptxt);
}
//涉及三级区域请使用setThreeLevelLoc pl是否显示空省份 flag是否去掉国外
function setTwoLevelLoc(pid, cid, city, epval, eptxt, pl, flag){
	addProvOpts(pid, epval!=null&&pl?0:null, eptxt, pl, flag);
	city = city+'';
	if(city>1000) FsetValueOfSelect(pid, city.substr(0,2));
	addCityOpts(pid, cid, epval, eptxt);
	Fid(pid).onchange = function(){ addCityOpts(pid, cid, epval, eptxt);};
	if(city>1000) FsetValueOfSelect(cid, city.substr(0,4));
}
//epval -1为00结尾的代码
function addDistrictOpts(pid, cid, did, epval, eptxt){
	var p = FgetValueOfSelect(pid);
	var c = FgetValueOfSelect(cid);
	if(p<=0&&c<=0){
		setListOfSelect(did, {}, 0, eptxt ? eptxt : '请选择');
		return;
	}

	if(p>0&&c<=0){
		setListOfSelect(did, {}, p*10000, eptxt ? eptxt : '请选择');
		return;
	}

	var ds = getDistrictList(c);
	setListOfSelect(did, ds, epval<0 ? (c+'00') : epval, eptxt);
}
//epval -1 为00结尾的代码 pl是否显示空省份
function setThreeLevelLoc(pid, cid, did, dic, epval, eptxt, pl, flag){
	dic = dic+'';
	setTwoLevelLoc(pid, cid, dic>100000 ? dic.substr(0,4) : 0, epval!=null?0:null, eptxt, pl, flag);
	addDistrictOpts(pid, cid, did, epval, eptxt);
	if(dic>100000) FsetValueOfSelect(did, dic.substr(0,6));
	Fid(pid).onchange = function(){ addCityOpts(pid, cid, epval, eptxt);addDistrictOpts(pid, cid, did, epval, eptxt);};
	Fid(cid).onchange = function(){ addDistrictOpts(pid, cid, did, epval, eptxt);};
}
//=======地区选择end

//将列表赋为选择框选项，参考constants.js
function addOpts(type, sid, epval, eptxt, flag){
	if(window['$_'+type+'_list'] == undefined) return;
	flag = flag === false ? false : true;
	setListOfSelect(sid, window['$_'+type+'_list'], epval, eptxt, flag);
}
//达人类型特殊处理
function addTitleOpts(sid, epval, eptxt, flag){
	var l = {};
	for (var ll in $_titles){
		l[ll] = $_titles[ll] + '达人';
	}
	setListOfSelect(sid, l, epval, eptxt, flag);
}
//获取某数据名
function valueToTxt(type, v, label){
	if(window['$_'+type+'_list'] == undefined) return '';
	v = window['$_'+type+'_list'][v];
	return v ? v : (label ? label : '保密');
}

/*
生成页码；linkformat:  javascript:goPage(%n%)
page:当前页码
ppp:每页多少条
count:总条数
linkformat:a标签的href
showpagecount：显示的页码数
appendHTML:后缀HTML
*/
function genPage(page, ppp, count, linkformat, showpagecount, appendHTML){
	showpagecount=showpagecount || 10;//默认10
	linkformat=linkformat || '#';
	var pHTML=[];
	var mPage=Math.ceil(count/ppp);
	mPage=mPage<=0?1:mPage;
	page = page-0;
	var tmp=Math.floor(showpagecount/2);
	var sPage=page>tmp?page-tmp:1;
	var ePage=sPage+showpagecount-1>mPage?mPage:sPage+showpagecount-1;

	var jsLink = linkformat.indexOf('javascript:')==0;
	var auft = jsLink ? (' href="javascript:" onclick="'+linkformat.substr(11)+';return false"') : (' href="'+linkformat+'"');

	pHTML.push('<div class="page_num c_2">'+page+' / '+mPage+' 页</div><div class="menu">');
	pHTML.push(page<=1?'<span class="last_page">上一页</span>':'<a'+auft.replace(/%n%/g,page>1?page-1:page)+' class="last_page">上一页</a>');
	for(var i=sPage;i<=ePage;i++){
		pHTML.push(i==page ? ('<span class="now">'+i+'</span>') : ('<a'+auft.replace(/%n%/g,i)+'>'+i+'</a>'));
	}
	pHTML.push(page>=mPage?'<span class="next_page">下一页</span>':'<a'+auft.replace(/%n%/g,page+1>mPage?mPage:page+1)+' class="next_page">下一页</a>');
	pHTML.push('</div>');
	return pHTML.join(' ') + (appendHTML?appendHTML:'');
}

/**
 * 统一页码
 * @param {String} pid 填充元素ID
 *
 */
function fillPage(pid, page, ppp, total, urlformat, viewablemaxpg){
	// ...
}

/**
 * bbs的页码模式
 * @param {Integer} p 当前页码
 * @param {Integer} tp 总页数
 * @param {String} lf 链接格式，如javascript:link(%n%)其中%n%代表页码
 * @param {Integer} sp 最多显示可以操作的按钮的个数
 * @param {String} click onclick内容，限字符串，如link(%n%)其中%n%代表页码
 */
function bbsPage(p, tp, lf, sp, click){
	if(tp<=1) return '';
	p=parseInt(p);
	sp=sp || 10;
	var t=Math.ceil(sp/2);
	if(isNaN(p) || p<=0 || p>tp) p=1;
	lf = lf || '#';
	var h=[];
	var oclick = click ? (' onclick="'+click+'"') : '';
	if(p>1) h.push('<a href="'+lf.replace(/%n%/g, p-1)+'"'+oclick.replace(/%n%/g, p-1)+' title="上一页"><<</a>');
	h.push('<a'+(1==p?' class="here"':'')+' href="'+lf.replace(/%n%/g, 1)+'"'+oclick.replace(/%n%/g, 1)+'>1</a>');
	if(p>t) h.push('<span class="c_2">…</span>');
	var s=(p>t?p-t:0)+2;
	var e=(s+sp-2>tp?tp:s+sp-2)-1;
	for(var i=s;i<=e;i++) h.push('<a'+(i==p?' class="here"':'')+' href="'+lf.replace(/%n%/g, i)+'"'+oclick.replace(/%n%/g, i)+'>'+i+'</a>');
	if(e+1<tp) h.push('<span class="c_2">…</span>');
	if(tp>1) h.push('<a'+(tp==p?' class="here"':'')+' href="'+lf.replace(/%n%/g, tp)+'"'+oclick.replace(/%n%/g, tp)+'>'+tp+'</a>');
	if(p<tp) h.push('<a href="'+lf.replace(/%n%/g, p-0+1)+'"'+oclick.replace(/%n%/g, p-0+1)+' title="下一页">>></a>');
	return h.join(' ');
}

//使用id为tplid的模板、数据为obj的数据填充id为conid的容器（tplid默认为conid+'_tpl'）
/**
 * <!--模板内容-->
 * {%变量名%}
 * <@块名@>块内容<@_对应块名@>
 */
function fillContentWithTPL(conid, o, tplid){
	if(!conid || !o) return;
	if(!tplid) tplid = conid+'_tpl';
	var TPL = Fid(tplid).innerHTML.replace(/^\s*<!--/, "").replace(/-->\s*$/, "");
	var BLOCKS = {};
	TPL = TPL.replace(/<@([0-9a-zA-Z_-]+)@>((.|\s)*?)<@_\1@>/, function(){
		BLOCKS[arguments[1]] = arguments[2];
		return '[#'+arguments[1]+'#]';
	});

	for(var key in BLOCKS){
		var t = BLOCKS[key];
		var ot = [];
		var p = o[key];
		if(p) {
			for(var pp in p){
				var tt = p[pp];
				ot.push(t.replace(/<_index_>/g, pp-0+1).replace(/\{([0-9a-zA-Z_-]+)\}/g, function(a0, a1){
					return tt[a1]!==undefined ? tt[a1] : '';
				}));
			}
		}
		
		BLOCKS[key] = ot.join('');
	}

	Fid(conid).innerHTML = TPL.replace(/\{([0-9a-zA-Z_-]+)\}/g, function(a0,a1){ return o[a1]!==undefined ? o[a1] : ''; }).replace(/\[#([0-9a-zA-Z_-]+)#\]/g, function(a0,a1){ return BLOCKS[a1]!==undefined ? BLOCKS[a1] : a1;})
}

function setHTMLPro(obj){
	for(var key in obj){
		try{Fid(key).innerHTML = obj[key];}catch(e){}
	}
}

// 名片单实例
window.userCard = window.userCard || {
	opts	: {},
	_getLayer	: function(){
		if(!this._layer) {
			var c = FcreateElement('div', '');
			c.style.display = 'none';
			document.body.insertBefore(c, document.body.firstChild);
			this._layer = c;
		}
		
		this._layer.className = this.opts.className || 'card';
		return this._layer;
	},

	_tpl	: '<p class="p1"><strong><a href="/user/guest.htm#uin={uin}" onclick="visit(\'{uin}\');return false" class="user_name c_1">{nickname}</a></strong>{online_chn}</p><p class="p2">{sex_chn} {age}岁 <span class="c_2">|</span> {city_chn}</p><p class="p4 bg_1">{icons}</p>',
	userTPL	: function(u){
		u.sex_chn = u.sex>0 ? '男' : '女';
		if(u.birthday) u.age = (new Date()).getFullYear() - u.birthday.split('-')[0];
		u.city_chn = getLocName(u.city);
		u.icons = this._getIcons(u);
		u.online_chn = u.online>0 ? '<em>在线</em>' : '';
		return this.getTPL().replace(/\{([^\}]+?)\}/g, function(a0, a1){
			if(u[a1]!=null) return u[a1];
			return '';
		});
	},
	setTPL	: function(tpl){
		this._tpl = tpl || this._tpl;
	},
	getTPL	: function(){
		return this.opts.tpl || this._tpl;
	},
	_iconList	: {
		present	: ['送礼物', 'toSendPresent'],
		hi		: ['打招呼', 'toSendPoke'],
		msg		: ['发小纸条', 'toSendSlip'],
		add		: ['加关注', 'toAddFriend'],
		musicbox	: ['点歌', 'toSendUserSong']
	},
	_getIcons	: function(u){
		if(!u||!u.uin) return '';
		var h = [];
		for(var k in this._iconList){
			h.push('<a href="/user/guest.htm#uin='+u.uin+'" onclick="'+this._iconList[k][1]+'(\''+u.uin+'\',\''+u.nickname+'\');return false"><img src="'+Gy_Editor_WindowImgPath+'icon_blank.gif" alt="'+this._iconList[k][0]+'" title="'+this._iconList[k][0]+'" class="icon_'+k+'" /></a>');
		}

		return h.join(' ')
	},

	// killtimeout, 设置指定超时后收起显示
	_kt	: null,
	// infotimeout, 设置指定超时后浮出显示
	_it	: null,
	// 当前展示的uin
	_uin	: 0,

	_showTPL	: function(o){
		var c = userCard._getLayer();
		if(!o || (o.errno!=0 && o.errno!=8 && o.errno!=9 && o.errno!=10 && o.errno!=11 && o.errno!=12)) {
			if(o){
				switch(o.errno-0){
					case 3:
						pingCityPv('qzoneqt.city.qq.com', '/usercard_nocity');
						setTips(c, '该用户不是城市达人');
						FsetModal(c);
						return;
					case 13:
					case 14:
						pingCityPv('qzoneqt.city.qq.com', '/usercard_overload');
						setTips(c, '暂无法<a href="/user/guest.htm#uin=' + userCard._uin + '" target="_blank">查看</a>');
						FsetModal(c);
						return
				}
			}

			pingCityPv('qzoneqt.city.qq.com', '/usercard_error');
			setTips(c, '系统繁忙，读取数据失败');
			FsetModal(c);
			return;
		}
		pingCityPv('qzoneqt.city.qq.com', '/usercard');
		//if(userCard._uin!=o.data.uin) return;
		c.innerHTML = userCard.userTPL(o.data);
		FsetModal(c);
		c.onmouseover=function(){
			clearTimeout(userCard._kt);
		};
		c.onmouseout=userCard.hide;
	},
	_showLayer	: function(uin, obj){
		if(!obj) return;
		var c = this._getLayer();
		c.style.position = 'absolute';
		c.style.zIndex = 101;
		c.style.width = this.opts.width ? (this.opts.width+'px') : 'auto';
		c.style.height = this.opts.height ? (this.opts.height+'px') : 'auto';
		
		// 调用定义了定位函数posFunc则使用自定义函数，否则使用默认行为
		if(typeof this.opts.posFunc == 'function'){
			this.opts.posFunc(c, obj);
		} else {
			var p=FgetPostion(obj);
			var ps=FgetWindowSize();
			var scp=FgetScrollPostion();
			FsetPostion(c,(((p.x+280)>(ps.width+scp.left))?(ps.width+scp.left-280):p.x)+(FBrowser.isIE6 ? 2 : 0),obj.offsetHeight+p.y);
		}

		c.style.display = '';
		FsetModal(c);
		FaddEvent(document, 'click', this.kill);
		//if(this._uin==uin) {
			//return;
		//}
		this._uin=uin;
		setTips(c, '读取数据中...');
		FsetModal(c);
		getUserGuest(uin, this._showTPL);
	},
	/**
	 * @param uin Integer 用户QQ号
	 * @param obj Element 停靠的元素
	 * @param opts Object 自定义参数
	 *					posFunc(c, obj): 自定义定位函数
	 *						c，名片元素；obj，停靠元素
	 *					tpl: 自定义模板
	 * 2010.1.23 增加自定义参数opts
	 */
	show	: function(uin, obj, opts){
		clearTimeout(this._kt);
		this.opts = opts || {};
		this._it = setTimeout(function(){
			userCard._showLayer(uin, obj);
		}, 50);

		obj.onmouseout = this.hide;
	},
	kill	: function(evt){
		var c = userCard._getLayer();
		try{if(FeventInArea(evt, c)) return;}catch(e){}
		c.style.display = 'none';
		FremoveEvent(document, 'click', userCard.kill);
		clearTimeout(userCard._it);

		if(typeof userCard.opts.onclose == 'function') userCard.opts.onclose();
	},
	hide	: function(){
		clearTimeout(userCard._it);
		userCard._kt = setTimeout(userCard.kill, 500);
	}
}; 


function showUserCard(uin, obj, opts){
	userCard.show(uin, obj, opts);
}

// 只有确定按钮的提示
function showInfoWin(txt, func, type, title, exthtml, opts){
	var ts = ['sorry', 'ask', 'erro', 'right'];
	if(!type || !FinArray(type, ts)) type = 'sorry';
	opts = opts || {};
	opts.tiptitle = title || '提示';
	opts.onsubmit = typeof func == 'function' ? func : null;
	opts.exthtml = exthtml;
	opts.btns = opts.btns || 1;
	var cnt = [];
	if(typeof txt != 'object'){
		txt = [txt+''];
	}
	for(var k in txt){
		cnt.push('<p class="'+(cnt.length==0?('pop_tips"><img src="'+Gy_Editor_WindowImgPath+'global_icon_'+type+'.png" alt="提示" title="提示" />'):'other_tips">')+''+txt[k]+'<\/p>');
	}
	createTipwin('pop_login', cnt.join(''), opts);

	Fid('pop_login').style.zIndex = 1000;
}

function hideInfoWin(){
	hideTipwin('pop_login');
	Fid('pop_login').style.zIndex = 0;
}
// 确定提示，确定之后做什么，取消做什么
function showConfirmWin(txt, okfunc, canfunc, title, exthtml){
	createTipwin('pop_login', '<p class="pop_tips"><img src="'+Gy_Editor_WindowImgPath+'global_icon_ask.png" alt="提示" title="提示" />'+txt+'<\/p>', {
       	tiptitle	: title || '提示',
       	btns		: 3,
		onsubmit	: typeof okfunc == 'function' ? okfunc : null,
		onclose	: typeof canfunc == 'function' ? canfunc : null,
       	exthtml		: exthtml
	});

	Fid('pop_login').style.zIndex = 1000;
}

function hideConfirmWin(){
	hideTipwin('pop_login');
	Fid('pop_login').style.zIndex = 0;
}

function showResultWin(txt, type, func, timeout, noclose){
	var ts = ['sorry', 'ask', 'erro', 'right', 'loading'];
	if(!type || !FinArray(type, ts)) type = 'sorry';
	timeout = timeout || 1.4;
	var div = Fid('$_result_$');
	if(!div){
		div = createDiv('', 'moment_tips bor_4');
		div.id = '$_result_$';
		div.style.zIndex = 1001;
	}

	if(div.showed) return;

	div.style.width = 'auto';
	div.func = typeof func == 'function' ? func : null;
	div.innerHTML = '<p class="bg_1"><img src="'+Gy_Editor_WindowImgPath+(type=='loading'?'loading.gif':('global_icon_'+type+'.png'))+'" alt="提示" />'+(txt || '')+'</p>';//http://mat1.gtimg.com/gongyi/npoimages/qqcity/blog/images/
	div.style.display = 'block';
	div.style.width = div.offsetWidth + 20 + 'px';
	div.showed = true;
	FsetOffsetWindowPostionByRate(div,2,3);
	FsetModal(null, null, null, 999);

	if(!noclose) setTimeout(hideResultWin, timeout*1000);
}

function hideResultWin(){
	var r = Fid('$_result_$');
	var p = true;
	var f = r.func;
	if(typeof f == 'function'){
		p = f();
	}

	if(p === false) return;
	r.style.display = 'none';
	r.showed = false;
	FunsetModal();
}

function showLoadingWin(txt){
	showResultWin(txt, 'loading', null, null, true);
}

function hideLoadingWin(){
	hideResultWin();
}

function setLoading(id){
	Fid(id).innerHTML = '<p class="loading"><img src="'+Gy_Editor_WindowImgPath+'loading.gif" title="数据加载中，请稍候……" alt="数据加载中，请稍候……" /></p>';
}

function setNullTips(id, txt){
	if(!id) return;
	txt = txt ? txt : '暂无';
	Fid(id).innerHTML = '<div class="tips_1"><p>'+txt+'</p></div>';
}
/**
 * 小模块提示
 */
function setTips(id, txt1, txt2){
	if(!id || !txt1) return;
	if(!txt2) {
		setNullTips(id, txt1);
		return;
	}
	Fid(id).innerHTML = '<div class="tips_1"><p class="p1">'+txt1+'</p><p class="p2">'+txt2+'</p></div>';
}
/**
 * 大模块提示
 * @param {String} id 容器元素id
 * @param {String} txt 提示文字
 * @param {Integer} type 提示类型：sorry,ask,erro,right默认sorry
 */
function notice(id, txt, type, ext){
	if(!id || !Fid(id)) return;
	var ts = ['sorry', 'ask', 'erro', 'right'];
	if(!type || !FinArray(type, ts)) type = 'sorry';
	txt = txt || '系统繁忙，请稍候再试';
	Fid(id).innerHTML = '<div class="worm_tips"><p><img src="'+Gy_Editor_WindowImgPath+'global_icon_'+type+'.png" alt="提示" />'+txt+'</p>'+(ext?('<p>'+ext+'</p>'):'')+'</div>';
}

function swapInput(inp, text, func){
	if(!inp) return;
	if(text==null) text = '';
	inp.onfocus = function(){
		this.className = this.className.replace(/((^| )c_(4|2))|$/, ' c_4');
		if(this.value==text) this.value = '';
	};
	inp.onblur = function(){
		this.className = this.className.replace(/((^| )c_(4|2))|$/, ' c_2');
		if(this.value=='') this.value = text;
	};
	if(typeof func == 'function'){
		FaddEvent(inp, 'keydown', function(e){
			var e=FgetEvent(e);
			if(e.keyCode==13) func();
		});
	}
}

function picFixWidth(o, width){
	if(o.width<=width) return;
	o.width = width;
	if(/^http:\/\/[^\/]*qq\.com/i.test(o.src) && o.parentNode.tagName.toLowerCase()!='a'){
		o.style.cursor = 'pointer';
		o.onclick = function(){
			openURL(this.src, true);
		};
	}
}

var g_insertSwfNum = 0;
function swfInit(){
	g_insertSwfNum ++;
}

function parseQzoneMsg(str, opt){ // 默认不转specialchars
	if(Fempty(str)) return '';
	str = str + '';
	opt = opt || {};
	var imgwidth = opt.imgWidth;
	var c = {'center':0,'u':0,'i':0,'b':0};
	var fCount = 0;
	var ie = FBrowser.isIE;
	var firefox = FBrowser.isFirefox;
	str = str.replace(/<br( ?\/)?>/g, "\n");
	var replacement = [
		[/\x20\x20/ig, "&nbsp;&nbsp;"],
		//[/(.+)(\r?\n|)/ig, "<div>$1</div>"],
		//[/<div>\s+?<\/div>/ig, "<div>&#173;</div>"],
		//[/\n/g, '<br />'],
		[/\[em\]e(\d{1,3})\[\/em\]/gi, '<img src="http://imgcache.qq.com/qzone/em/e$1.gif" onresizestart="return false" />'],
		[/\[url(|=([^\]]+))\](.+?)\[\/url\]/gi, function(a0,a1,a2,a3) {
			var REG_HTTP = new RegExp("^http:\/\/", 'i');
			var INVALID_HREF_STRING = /[\"\']/i;
			var SP_STRING = /(&lt;|&gt;|<|>)/i;
			var INVALID_EXPLAIN_STRING = /\[(em|video|flash|audio|vphoto|quote|ffg|url|marque|email)/i;
			var explain = "";
			var href = "";
			if (!a1) {
				if (REG_HTTP.test(a3)) {
					explain = href = a3;
				}
			} else {
				if (REG_HTTP.test(a2)) {
					explain = a3;
					href = a2;
				} else if (REG_HTTP.test(a3)) {
					explain = a2;
					href = a3;
				}
			}
			if (!href || !explain || SP_STRING.test(href) || INVALID_HREF_STRING.test(href) || INVALID_EXPLAIN_STRING.test(explain)) return a0;
			else return '<a href="' + href + '" target="_blank">' + explain + '</a><wbr>';
		}],

		[/\[card=(\d+)\](.+?)\[\/card\]/gi, '<a href="http://user.qzone.qq.com/$1" link="nameCard_$1" target="_blank" class="q_namecard">$2</a>'],
		[/\[url=(http[^\\\]"']+)]([^\[]+)\[\/url\]]/gi, '<a href="$2" target="_blank">$1</a>'],
		opt.disableImg ? [] : [/\[img,(\d+),(\d+)\]http(.[^\]\\'"]*)\[\/img\]/gi, '<img src="http$3" border="0" width="$1" height="$2"'+(imgwidth>0?(' onload="picFixWidth(this,'+imgwidth+')"'):'')+' />'],
		opt.disableImg ? [] : [/\[img\]http(.[^\]\\'"]*)\[\/img\]/gi, '<img src="http$1" border="0"'+(imgwidth>0?(' onload="picFixWidth(this,'+imgwidth+')"'):'')+' />'],
		[/\[email\](.*?)\[\/email\]/gi, '<a href="mailto:$1" target="_blank">$1</a>'],
		[/\[email=(.*?)\](.*?)\[\/email\]/, '<a href="mailto:$1" target="_blank">$2</a>'],
		opt.disableImg ? [] : [/\[qqshow,(\d+),(\d+),(\d+),(\d+)\]http(.[^\]\\'"]*)\[\/qqshow\]/gi, '<img src="http$5" border="0" width="$1" height="$2"'+(imgwidth>0?(' onload="picFixWidth(this,'+imgwidth+')"'):'')+' />'], 

		[/\[M\]/gi, function(){c.center++;return '<div align="center">&shy;';}],
		[/\[R\]/gi, function(){c.center++;return '<div align="right">&shy;';}],
		[/\[U\]/gi, function(){c.u++;return ie?'<U>':'<span style="text-decoration: underline">';}],
		[/\[I\]/gi, function(){c.i++;return ie?'<I>':'<span style="font-style: italic">';}],
		[/\[B\]/gi, function(){c.b++;return ie?'<B>':'<span style="font-weight: bold">';}],
		[/\[\/(R|M)\]/gi, function(){c.center--;return '</div>';}],
		[/\[\/U\]/gi, function(){c.u--;return ie?'</U>':'</span>';}],
		[/\[\/I\]/gi, function(){c.i--;return ie?'</I>':'</span>';}],
		[/\[\/B\]/gi, function(){c.b--;return ie?'</B>':'</span>';}],

		[/\[ft=(.*?),\s*(\d*?),\s*(.*?)\]/gi, function(a0,a1,a2,a3){ fCount++;return '<font face="'+a3+'" style="line-height:1.8em" size="'+(a2>6?6:a2)+'" color="'+a1+'">';}],
		[/\[fts=(\d*?)\]/gi, function(a0,a1){ fCount++;return '<font size="'+a1+'" style="line-height:1.8em">';}],
		[/\[ftc=([#\w]{1,10})\]/gi, function(a0,a1){ fCount++;return '<font color="'+a1+'">';}],
		[/\[ftf=(.*?)\]/gi, function(a0,a1){ fCount++;return '<font face="'+a1+'">';}],
		[/\[ffg,\s*([#\w]{1,10}),\s*#?([0-9A-Fa-f]*?)\]/gi, function(a0,a1){ fCount++;return '<font style="filter: glow(color='+a1+',strength=3);color: '+a1+';height:auto;" class="lightFont" title="发光字">';}],
		[/\[\/ft\]/gi, function(){fCount--;return '</font>';}],

		[/\[ol\]/gi, '<ol style="list-style-type:decimal">'],
		[/\[ul\]/gi, '<ul style="list-style-type:disc">'],
		[/\[li\]/gi, '<li>'],
		[/\[\/(ul|ol|li)\]/gi, '</$1>'],
		
		[/\[quote=引自：(.*?)\s+于\s+(.*?)\s+(.*?)\s+.*?\]((.|\s)*?)\[\/quote\]/gi, '<blockquote style="border:1px dashed gray;padding:10px;margin:5px 20px;">引自：<cite>$1</cite> 于<ins>$2 $3</ins>发表的评论<br />引用内容：<br /><q>$4</q></blockquote>'],
		[/\n/g, '<br />']
	];

	if(opt.convertSpecialChars){
		replacement.unshift([/</ig, "&lt;"]);
		replacement.unshift([/>/ig, "&gt;"]);
		replacement.unshift([/&/ig, "&amp;"]);
	}

	if(opt.enableMusic){
		parseQzoneMsg.nCount = parseQzoneMsg.nCount || 0;
		__flash__removeCallback = function(){};
		__flash_unloadHandler = function(){};
		__flash_savedUnloadHandler = function(){};
		replacement.push([/\[music\]([^\[]+?)\[\/music\]/gi, function(a0, a1){
			a1 = a1.replace(/"/g, '&quot;');
			var arr = a1.split('\|');
			if(arr.length%6==1) arr.splice(-1, 1);
			if(arr.length%6==0) {
				parseQzoneMsg.nCount ++;
				return '<object codeBase="http://fpdownload.macromedia.com/get/flashplayer/current/swflash.cab#version=8,0,0,0" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="'+((arr.length > 7) ? 440 : 410)+
						'" height="'+((arr.length>7) ? 190 : 100)+'" src="'+"http://imgcache.qq.com/music/musicbox_v2_1/img/MusicFlash.swf"+
						'" bgcolor="#ffffff" scale="showall" menu="true" allowScriptAccess="always" name="musicFlash**" id="musicFlash'+(parseQzoneMsg.nCount-1)+'"'+
						'" ubb="'+arr.join('|')+'"><param name="movie" value="http://imgcache.qq.com/music/musicbox_v2_1/img/MusicFlash.swf" />'+
						'<param name="bgColor" value="#ffffff" /><param name="scale" value="showall" /><param name="wmode" value="transparent" /><param name="menu" value="true" />' + 
						'<param name="allowScriptAccess" value="always" /></object>';
			}
			return '';
		}]);
	}

	for(var k in replacement){
		var r = replacement[k];
		if(r.length==2) str = str.replace(r[0], r[1]);
	}
/*
	str = str.replace(/\n/gi, '<br />');
	str = str.replace(/\[M\]/gi, function(){c.center++;return '<center>';});
	str = str.replace(/\[R\]/gi, function(){c.center++;return '<center style="text-align:right">';});
	str = str.replace(/\[U\]/gi, function(){c.u++;return '<u><wbr>';});
	str = str.replace(/\[I\]/gi, function(){c.i++;return '<i><wbr>';});
	str = str.replace(/\[B\]/gi, function(){c.b++;return '<b><wbr>';});

	str = str.replace(/\[\/(R|M)\]/gi, function(){c.center--;return '</center>';});
	str = str.replace(/\[\/U\]/gi, function(){c.u--;return '</u><wbr>';});
	str = str.replace(/\[\/I\]/gi, function(){c.i--;return '</i><wbr>';});
	str = str.replace(/\[\/B\]/gi, function(){c.b--;return '</b><wbr>';});

	str = str.replace(/\[ft=#?([0-9A-Fa-f]*),\s*(\d*?),(.*?)\]/gi, function(){ fCount++;return '<font face="'+arguments[3]+'" size="'+arguments[2]+'" color="#'+arguments[1]+'"><wbr>';});
	str = str.replace(/\[fts=(\d*?)\]/gi, function(){ fCount++;return '<font size="'+arguments[1]+'"><wbr>';});
	str = str.replace(/\[ftc=#?([0-9A-Fa-f]*?)\]/gi, function(){ fCount++;return '<font color="'+arguments[2]+arguments[1]+'"><wbr>';});
	str = str.replace(/\[ftf=(.*?)\]/gi, function(){ fCount++;return '<font face="'+arguments[1]+'"><wbr>';});
	str = str.replace(/\[ffg,\s*#?([0-9A-Fa-f]*?),\s*#?([0-9A-Fa-f]*?)\]/gi, function(){ fCount++;return '<font color="#'+arguments[1]+'"><wbr>';});
	str = str.replace(/\[\/ft\]/gi, function(){
		fCount--;
		return '</font><wbr>';
		}
	);
*/
	for(var n in c){
		if(c[n] > 0) str += (new Array(1+c[n])).join(n=='center'?'</div>':(FBrowser.isIE?('</'+n.toUpperCase()+'>'):'</span>'));
	}

	if(fCount>0){
		str += (new Array(fCount+1)).join('</font>');
	}
	/*
	str = str.replace(/\[em\](e\d+)\[\/em\]/gi, '<img src="http://imgcache.qq.com/qzone/em/$1.gif" />');
	str = str.replace(/\[quote=引自：(.*?)\s+于\s+(.*?)\s+(.*?)\s+.*?\]((.|\s)*?)\[\/quote\]/gi, '<blockquote style="border:1px dashed gray;padding:10px;margin:5px 20px;">引自：<cite>$1</cite> 于<ins>$2 $3</ins>发表的评论<br />引用内容：<br /><q>$4</q></blockquote>');
	*/
	return str;
}


function clearPostMusicData(){
	if(typeof clearMusicData == 'function') {
		clearMusicData();
	}

	parseQzoneMsg.nCount = 0;
}

function initMusicPlayer(){
	var arr = document.getElementsByName("musicFlash**");
	if(arr.length > 0) {
		var musicParams = [];
		for(var index=0; index<arr.length; ++index) {
			if(!!arr[index].ubb) {
				musicParams.push(arr[index].ubb);
				arr[index].id = "musicFlash" + (musicParams.length-1);   // dump useless
				arr[index].name = "musicFlash" + (musicParams.length-1); // dump useless
			}
		}

		if(musicParams.length > 0) {
			top.g_iLoginUin = getUin();
			if(typeof initMusicData == 'function') initMusicData.apply(null, musicParams);
			else FloadJS("http://imgcache.qq.com/music/musicbox_v2_1/js/musicblog_player.js", function(){
				//override 
				var openSingerUrl = function(v){
					var m = v.match(/singer_(\d+)\.htm/);
					if(m && m[1]) open('/app/musicbox/#mod=singerDetail&singerid='+m[1], '_blank');
				};
				window.openSongLink = openSingerUrl;
				window.openSingerLink = openSingerUrl;
				window.addToBg = function() {};
				initMusicData.apply(null, musicParams);
			}, '', 'GB2312');
		}
	}
}

var UBB2HTML = function(){
	var a = arguments;
	var opt = a[3] || {};
	if(a[1]) opt['convertSpecialChars'] = a[1];
	if(a[2]) opt['imgWidth'] = a[2];
	return parseQzoneMsg(a[0], opt);
};
function HTML2UBB(str, opt){
	if(Fempty(str)) return '';
	str += '';
	opt = opt || {};
	var ie = FBrowser.isIE;
	var replacement = [
		[/^<(div|p)><\/(div|p)>/gmi, ''],
		[/\n$/gi, ""],
		[/[\x00-\x08\x0b-\x0c\x0e-\x1f]/g, ''],
		//[/\xB4|\u2661/, "'"],
		//[/\u30FB/, "・"],
		/*
		[ie?/<([\/]?)(strong|b)(\s*|\s+[^>]*)>/gi:/<(div|span)[^>]+font-weight:\s*bold[^>]*>(.*?)<\/(div|span)[^>]*>/gmi, ie?'[$1B]':'[B]$2[/B]'],
		[ie?/<([\/]?)(em|i)(\s*|\s+[^>]*)>/gi:/<(div|span)[^>]+font-style:\s*italic[^>]*>(.*?)<\/(div|span)[^>]*>/gmi, ie?'[$1I]':'[I]$2[/I]'],
		[ie?/<([\/]?)(ins|u)(\s*|\s+[^>]*)>/gi:/<(div|span)[^>]+text-decoration:\s*underline[^>]*>(.*?)<\/(div|span)[^>]*>/gmi, ie?'[$1U]':'[U]$2[/U]'],
		*/
		[/<([\/]?)(strong|b)(\s*|\s+[^>]*)>/gi,'[$1B]'],
		[/<(div|span)[^>]+font-weight:\s*bold[^>]*>(.*?)<\/(div|span)[^>]*>/gmi,'[B]$2[/B]'],
		[/<([\/]?)(em|i)(\s*|\s+[^>]*)>/gi,'[$1I]'],
		[/<(div|span)[^>]+font-style:\s*italic[^>]*>(.*?)<\/(div|span)[^>]*>/gmi,'[I]$2[/I]'],
		[/<([\/]?)(ins|u)(\s*|\s+[^>]*)>/gi,'[$1U]'],
		[/<(div|span)[^>]+text-decoration:\s*underline[^>]*>(.*?)<\/(div|span)[^>]*>/gmi,'[U]$2[/U]'],
		
		[/<(div|p)[^>]+align.{0,2}center[^>]*>(.*?)<\/(div|p)[^>]*>/gmi, '[M]$2[/M]'],
		[/<(div|p)[^>]+align.{0,2}right[^>]*>(.*?)<\/(div|p)[^>]*>/gmi, '[R]$2[/R]'],
		[/<font[^>]+\_glowcolor.{0,2}#(\w{6})[^>]*>/, '[ffg,#$1,#FFFFFF]'],
		[/<a[^>]+link="nameCard_(\d+)"[^>]*>(.*?)<\/a[^>]*>/gi, '[card=$1]$2[/card]'],
		[/<font([^>]+)>/gi, function(a0,a1) {
			var color = /color([^#\w]{0,2})([#\w]{1,7})/.exec(a1);
			var size = /size=["]?(\d{1})/.exec(a1);
			var face = /(face=|font-family:)("|)([^"\s]+)("|)/.exec(a1);
			return "[ft=" + (color ? color[2] : "") + "," + (size ? size[1] : "") + "," + (face ? face[3] : "") + "]";
		}],
		[/<(div|span)([^>]+)>(.*?)<\/(div|span)[^>]*>/img, function(a0,a1,a2,a3) {
			var color = /color:([#\w]{1,7})/i.exec(a2);
			var face = /font-family:\s*("|'|)([^"'\s]+)("|'|)/i.exec(a2);
			return "[ft="+(color?color[1]:"")+",,"+(face?face[2]:"")+"]"+a3+"[/ft]";
		}],
		[/<\/font[^>]*>/gi, '[/ft]'],
		[/<(div|p)[^>]*>(.*?)<\/(div|p)[^>]*>/gmi, '$2\n'],
		[/<br\s*\/?>/ig, '\n'],
		[/<script[^>]*>(.*?)<\/script[^>]*>/gmi, ''],
		[/<style[^>]*>(.*?)<\/style[^>]*>/gmi, ''],
		[/<a[^>]+href="mailto:(.*?)"[^>]*>(.*?)<\/a[^>]*>/gmi, function(a0,a1,a2){
			if(checkEmail(a1)) return '[email='+a1+']'+a2+'[/email]';
			else return a0;
		}/*'[email=$2]$1[/email]'*/],
		[/<a[^>]+href="(.*?)"[^>]*>(.*?)<\/a[^>]*>/gmi, function(a0,a1,a2){
			if(checkURL(a1)) return '[url='+a1+']'+a2+'[/url]';
			else return a0;
		}/*'[url=$1]$2[/url]'*/],
		[/<img[^>]+em\/e(\d{1,3}).gif[^>]*>/gi, '[em]e$1[/em]'],
		[/<img([^>]+)>/gi, function(a0,a1) {
			try {
				var orgSrc=/orgSrc="([^"]+)"/i.exec(a1);
				var src=(orgSrc&&orgSrc[1])?orgSrc[1]:(/src="([^"]+)"/i.exec(a1)[1]);
				var w=/WIDTH(\s*:\s*|=)"?(\d+)"?/i.exec(a1);
				var h=/HEIGHT(\s*:\s*|=)"?(\d+)"?/i.exec(a1);
				var t=/TRANSIMG=(\"*)(\d{1})/i.exec(a1);
				var ow=/ORIGINWIDTH=(\"*)(\d+)/i.exec(a1);
				var oh=/ORIGINHEIGHT=(\"*)(\d+)/i.exec(a1);
				var oContent=/CONTENT="([^"]+)"/i.exec(a1);
				var osrc=/ORIGINSRC="([^"]+)"/i.exec(a1);
				var cID=/_cacheID="([^"]+)"/i.exec(a1);
				var em = /em\/e(\d{1,3})\.gif/i.exec(a1);
				if (em) return "[em]e" + em[1] + "[/em]";
				if(opt.disableImg) return '';
				if (w && h) {
					return "[img," + w[2] + "," + h[2] + "]" + src + "[/img]";
				}
				return "[img]" + src + "[/img]";
			} catch(e) {
				return ""
			}
		}],
		[/<ol(\s*style="LIST-STYLE-TYPE:\s*[a-z]+(;)?")?[^>]*>/gi, '[ol]'],
		[/<ul(\s*style="LIST-STYLE-TYPE:\s*[a-z]+(;)?")?[^>]*>/gi, '[ul]'],
		[/<li(\s*style="MARGIN:\s*\\d+px(;)?")?[^>]*>/, '[li]'],
		[/<\/(ul|ol|li)>/, '[/$1]'],
		//[/<font[^>]+style="[^"].+color=#(\w+).+color:\s#(\w+).+"[^>]*>([^\<]+)<\/font[^>]*>/gi, '[ffg,#$1,#$2]$3[/ft]'],
		[/([a-z]+="[^<>"]+[<>][^"]+")*/, ''],
		[/<[^>]*?>/g, ""],
		[/&shy;/ig, ""],
		[/&nbsp;/ig, " "],
		[/&lt;/ig, "<"],
		[/&gt;/ig, ">"],
		[/&amp;/ig, "&"],
		[/\[(url|ft|b|i|u|m|r|email)[^\[]*?\\](\x20*?)\[\/(url|ft|b|i|u|m|r|email)\]/gi, ""]
	];
/*
	if(ie) {
		replacement.push([/<font[^>]+glow\(color=#(\w{6})[^>]*>/gi, '[ffg,#$1,#FFFFFF]']);
		replacement.push([/^<(div|p)><\/(div|p)>/gi, '']);
	}

	if(!ie){
		replacement.push([/<(div|span)([^>]+)>(.*?)<\/(div|span)[^>]*>/gi, function(a0,a1,a2,a3) {
			var color = /color:([^;]+)/.exec(a2);
			var face = /font-family:([^;]+)/.exec(a2);
			return "[ft=" + (color ? color[1] : "") + ",," + (face ? face[1] : "") + "]" + a3 + "[/ft]";
		}]);
	}
*/
	for(var k in replacement){
		var r = replacement[k];
		if(r.length==2) str = str.replace(r[0], r[1]);
	}
	return str;
}

function show(obj){
	obj.style.display = '';
}
function hide(obj){
	obj.style.display = 'none';
}
function createDiv(html, className){
	var x = document.createElement('div');
	if(className) x.className = className;
	x.innerHTML = html;
	x.style.position='absolute';
	hide(x);
	document.body.insertBefore(x, document.body.firstChild);
	return x;
}

function slowHide(obj, d, speed, func, min){
	var oldWidth = obj.offsetWidth;
	var oldHeight = obj.offsetHeight;
	if(!speed || speed<40) speed = 40;
	var count = speed;
	if(d!=1&&d!=2) d = 0;
	obj.style.overflow = 'hidden';
	obj.hidding = true;
	if(obj.showing) {
		clearInterval(obj.interval);
		obj.showing = false;
	}
	
	min = min>0 ? min : 0;
	obj.interval = setInterval(function(){
		if(oldWidth*count/speed<=min || oldHeight*count/speed<=min || count<=0) {
			clearInterval(obj.interval);
			obj.hidding = false;
			if(min==0) hide(obj);
			else obj.style.height = min +'px';
			return;
		}
		count -= 10;
		count = count < 0 ? 0 : count;
		var x = oldWidth * count / speed;
		x = x<=0 ? 1 : x;
		var y =  oldHeight * count / speed;
		y = y<=0 ? 1: y;
		if(d==1 || d==2) obj.style.width = x + 'px';
		if(d==0 || d==2) obj.style.height = y + 'px';
		if(typeof func == 'function') func();
	}, 10);
}
//dr 0 下 1 右 2 下右
function slowShow(obj, d, speed, func){
	if(!speed || speed<40) speed = 40;
	obj.style.overflow = 'hidden';
	show(obj);
	var width = obj.scrollWidth;
	var height = obj.scrollHeight;
	var count = Math.round(d==1 ? obj.offsetWidth*speed/width : obj.offsetHeight*speed/height);
	count = count>=speed ? (speed-1) : count;//减10防止不改变元素高度
	if(d!=1&&d!=2) d = 0;
	obj.showing = true;
	if(obj.hidding) {
		clearInterval(obj.interval);
		obj.hidding = false;
	}

	obj.interval = setInterval(function(){
		if(count>=speed) {
			clearInterval(obj.interval);
			obj.style.overflow = 'visible';
			obj.showing = false;
			return;
		}
		count += 10;
		count = count>speed ? speed : count;
		if(d==1 || d==2) obj.style.width = width * count / speed + 'px';
		if(d==0 || d==2) obj.style.height = height * count / speed + 'px';
		if(typeof func == 'function') func();
	}, 1);
}

function thisMovie(movieName){
	return ((navigator.appName.indexOf("Microsoft")!=-1)?window[movieName]:document[movieName]);
}


/**
 * 鼠标放上去的下拉菜单
 * @param {Object} listobj 下拉菜单的DOM对象
 * @param {Object} attobj 宿主元素对象
 */
function attachListElement(listobj, attobj, offsetx, offsety, disableloc, opts){ //  onopen 打开列表菜单的回调函数 onclose 关闭列表菜单的回调函数 list_open
	if(!listobj || !attobj) return;
	opts = opts || {};
	opts.offX = offsetx;
	opts.offY = offsety;
	opts.disLoc = disableloc;

	if(!opts.disLoc) listobj.style.position = 'absolute';
	var clickCommon = function(att){
		return function(evt){
			var list = att.list; 
			if(!list.parentNode || !att.parentNode) {
				if(att.clickFunc) FremoveEvent(document, 'click', att.clickFunc);
				return;
			}
			if(FeventInArea(evt, [list, att])) return;
			if(att.opts.onclose) att.opts.onclose(list, att);
			list.style.display = 'none';
			if(att.clickFunc) {
				FremoveEvent(document, 'click', att.clickFunc);
				att.clickFunc = null;
			}
		};
	};

	attobj.list = listobj;
	listobj.att = attobj;
	attobj.opts = opts;

	attobj.onmouseout = listobj.onmouseout = function(){
		var att = this.att || this; 
		var list = this.list || this; 
		if(att.listtimeout) clearTimeout(att.listtimeout);
		att.listtimeout = setTimeout(function(){
			if(att.opts.onclose) att.opts.onclose(list, att);
			list.style.display = 'none';
			clearTimeout(att.listtimeout);
			if(att.clickFunc) {
				FremoveEvent(document, 'click', att.clickFunc);
				att.clickFunc = null;
			}
		}, 200);
	};

	listobj.onmouseover = function(){
		if(this.att.listtimeout) clearTimeout(this.att.listtimeout);
	};
	
	attobj.onmouseover = function(){
		if(this.listtimeout) clearTimeout(this.listtimeout);
		var list = this.list; 
		if(!this.disLoc) FsetOffsetPostion(list, this, this.offX || 0, this.offsetHeight+(this.offY||0));
		if(list.style.display == 'none'){
			if(this.opts.onopen) this.opts.onopen(list, this);
			list.style.display = 'block';
			FsetModal(list);
			this.clickFunc = clickCommon(this);
			FaddEvent(document, 'click', this.clickFunc);
		}
	};

	listobj = null;
	attobj = null;
}

/**
 * 输入域长度检测
 */
function lenMon(ob, minlen, maxlen, tipcon, errclass, okclass){
	if(!ob) return;
	minlen = minlen || 0;
	maxlen = maxlen || Infinity;
	errclass = errclass || 'c_9';
	okclass = okclass || 'c_2';
	function setLenMonTip(){
		var l = ob.value.getLength();
		if(tipcon) {
			tipcon.innerHTML = l+'/'+maxlen;
			var r = new RegExp('((^| )'+errclass+'|'+okclass+')|$', '');
			if(l<minlen || l>maxlen) {
				tipcon.className = tipcon.className.replace(r, ' '+errclass);
			} else {
				tipcon.className = tipcon.className.replace(r, ' '+okclass);
			}
		}
	}

	setLenMonTip();
	FaddEvent(ob, 'keyup', setLenMonTip);
	FaddEvent(ob, 'paste', setLenMonTip);
}
/**
 * 设置验证码
 * @param {String} img 图片元素ID
 * @param {String} inp 输入框ID
 * @param {boolean} focus 值为false的时候不自动聚焦
 */
function setVerifyImg(img, inp, focus){
	img = typeof img == 'string' ? Fid(img) : img;
	inp = typeof inp == 'string' ? Fid(inp) : inp;

	if(img) img.src = "http://captcha.qq.com/getimage?aid=30000101&"+Math.random();
	if(inp) inp.value = '';
	if(inp && focus!==false) try{inp.focus();}catch(e){}
}

/**
 * 验证码，仅仅控制显隐，无需定位，与样式配合，只负责控制验证码显示和隐藏，不负责拉取，拉取的函数setVerifyImg
 * @param ipt {Element} 输入框
 * @param imgdiv {Element} 验证码图片层
 * @param img {Element} 验证码图片
 * @param focus {Boolean} 是否获得输入框焦点
 */
/*
function attachVerifyCode(ipt, imgdiv, img, focus){
	if(!ipt || !imgdiv) return;
	ipt.style.imeMode = 'disabled';
	ipt.maxLength = 4;
	ipt.onfocus = function(){
		// 第一次加载验证码,后面需要手动更新
		if(!ipt._inited){
			setVerifyImg(img, ipt);
			ipt._inited = true;
		}
		if(ipt.vtimeout) clearTimeout(ipt.vtimeout);
		imgdiv.style.display = '';
		FaddEvent(document, 'click', func);
	};

	var func = function(e){ // 隐藏层
		if(ipt.vtimeout) clearTimeout(ipt.vtimeout);
		if(FeventInArea(e, [ipt, imgdiv])) return;
		imgdiv.style.display = 'none';
		FremoveEvent(document, 'click', func);
	};

	ipt.onblur = function(){
		if(ipt.vtimeout) clearTimeout(ipt.vtimeout);
		ipt.vtimeout = setTimeout(function(){
			imgdiv.style.display = 'none';
			clearTimeout(ipt.vtimeout);
			FremoveEvent(document, 'click', func);
		}, 800);
	};

	try{if(focus) ipt.focus();}catch(e){}
}
*/
/*
var callBackHsmp=[];
function loadXMLAsync(xID, xUrl, callback, err_callback,nocache,data,returnType){
	var m=xUrl.match(/(^http:\/\/([a-z,A-Z,0-9,\-,_,\.]+\.qq\.com)\/)/);
	if(!m){alert("不能访问非qq.com域的资源");return;}
	var domain = m[0];
	var host = m[2];
	var proxyPageURL = domain+"proxy.html";
	if(domain == "http:\/\/imgcache.qq.com/")
	proxyPageURL = "http:\/\/imgcache.qq.com/qzone/proxy.html";

	var f = document.getElementsByTagName("iframe");
	for(var i=0;i<f.length;i++){
		var isRightProxy=false;
		try{isRightProxy=f[i].src.indexOf(proxyPageURL)==0}catch(e){}
		if(isRightProxy){//找到了代理页面
			if(!callBackHsmp[host] && typeof callBackHsmp[host] != "undefined"){//代理页面没用回调等待队列（初始化已经完成）
				f[i].contentWindow.loadXMLAsync(xID, xUrl, callback, err_callback,nocache,data,returnType);
			}else{
				if (typeof callBackHsmp[host] == "undefined") callBackHsmp[host] = [];
				callBackHsmp[host][callBackHsmp[host].length]={
				"callback":callback,
				"xID":xID,
				"xUrl":xUrl,
				"err_callback":err_callback,
				"nocache":nocache,
				"data":data,
				"returnType":returnType
				};
			}
			return;
		}
	}

	if (!callBackHsmp[host]){
		callBackHsmp[host]=[{
		"callback":callback,
		"xID":xID,
		"xUrl":xUrl,
		"err_callback":err_callback,
		"nocache":nocache,
		"data":data,
		"returnType":returnType
		}];
		createProxy(proxyPageURL);
	}
};


*/



/**
* 创建proxy页面
* @param {String} src
*/

/*
function createProxy(src){
	var f = document.getElementsByTagName("iframe");
	for(var i=0;i<f.length;i++)
	if (f[i].src.indexOf(src)!= -1) return;

	var i = document.createElement("iframe");
	document.body.insertBefore(i,document.body.firstChild);
	i.width=0;
	i.height=0;
	i.style.display='none';
	i.src=src;
	i = null;
}

function simpleNode(obj, nodetag){
	var t = obj.getElementsByTagName(nodetag);
	if(t.length <= 0) return null;
	var r = t[0];
	var o = r.firstChild;;
	var t = r.getAttribute('type');
	t = t ? t : 'fail';
	if(o && o.nodeType == 3) {
		return {type:t, text:o.nodeValue};
	} else {
		return {type:t, text:''};
	}
}

*/

/*
function sendPoke(tuin, ptype, back, succallback, tnickname){
	if(tuin == uinKey) {
		showInfoWin('不能发送给自己');
		return;
	}
	if(!validateUinStr(tuin)){
		showInfoWin('发送的QQ号码不正确');
		return;
	}

	if(!ptype){
		showInfoWin('请选择打招呼的动作');
		return;
	}

	var pname = getPokeName(ptype);
	if(!pname){
		showInfoWin('请选择正确的招呼动作');
		return;
	}

	window.sendPokeAJAXAction = function(o){
		// 打招呼的隐私处理在这里
		if(o.errno==13) return showInfoWin('发送失败，对方设置了不接收任何人的招呼。');
		if(o.errno==14) return showInfoWin('对方只允许有头像的城市达人打招呼，立即上传你的达人头像吧。', function(){
			openURL('/user/user3.htm', true);
		}, 'sorry', '', '', { btns:3, okbtntxt:'立即上传头像'}); // 无头像
		if(o.errno==15) return showInfoWin('对方只允许好友打招呼，立即加为好友吧。', function(){
			toAddFriend(o.revuin || tuin, tnickname || o.revuin || tuin);
		}, 'sorry', '', '', { btns:3, okbtntxt:'加为好友'});
		back = back == 1 ? 1 : 0;
		loadXMLAsync('sendPoke', 'http://drift.qzone.qq.com/cgi-bin/sendpoke', 
			function(){
				var sp = g_XDoc['sendPoke'];
				if(!sp)
					return;
				var error = simpleNode(sp, 'error');
				if(error) {
					switch(error.type){
						case 'login':
							cityLoginForm();
							return;
						default:
							showInfoWin(error.text);
					}
					
					return;
				}
				var suc = simpleNode(sp, 'succ');
				showResultWin((suc.text ? suc.text : '发送成功'), 'right');
				if(typeof succallback == 'function') succallback();
			},
			function(){ showInfoWin('系统繁忙，请稍候再试！');},
			true, 'targetuin='+tuin+'&poketype='+ptype+'&giveback='+back+'&city=1', 'xml');
	};

}
*/



/*
// 下列操作的函数原型
function appAction(uin, nickname, nickneed, act, func, sex){
	var acts = {
		'friend'	: '把自己加为好友',
		'slip'		: '给自己发小纸条',
		'poke'		: '给自己打招呼',
		'present'	: '给自己送礼物',
		'msg'		: '给自己发留言'
	};
	if(!(act in acts)) return;
	if(act != 'present' && !validateUinStr(uin)) return showResultWin('QQ号码错误','erro');

	// 都需要判断登录态等
	if(!precheck()) return;
	if(uin == uinKey && act!='msg') return showInfoWin('不能'+acts[act]);
	loadExtJs(function(){
		if(typeof func == 'string') func = window[func];
		if(nickneed && !nickname){
			getUserGuest(uin, function(o){
				if(typeof func=='function') func(uin, (o&&o.data ? o.data.nickname : '') || uin, sex);
			});
		} else if(typeof func=='function') func(uin, nickname, sex);
	});
}

function toAddFriend(uin, nickname, sex){
	appAction(uin, nickname, 0, 'friend', 'addFriend', sex);
}

function toSendSlip(uin, nickname){
	appAction(uin, nickname, 1, 'slip', function(u, n){
		appPopWin.show('slip', u, n);
	});
}

function toSendPoke(uin, nickname){
	appAction(uin, nickname, 1, 'poke', function(u, n){
		appPopWin.show('poke', u, n);
	});
}

function toSendPresent(uin, nickname, giftId){
	appAction(uin, nickname, 1, 'present', function(u, n){
		appPopWin.show('present', u, n, {
			giftId	: giftId
		});
	});
}

function toSendMsg(uin, nickname){
	appAction(uin, nickname, 1, 'msg', function(u, n){
		appPopWin.show('msg', u, n);
	});
}

function toSendUserSong(uin, nickname){
	if(!validateUinStr(uin)) return showResultWin('QQ号码错误','erro');
	toSendSong({
		uin	: uin,
		nickname	: nickname
	});
}



//赠送歌曲，opt的属性可以是{song_id:324334,song_name:'dsf'}也可以是{uin:10000,nickname:'pony'}
function toSendSong(opt){
	// 都需要判断登录态等
	if(!precheck()) return;
	if(opt.uin == uinKey) return showInfoWin('不能给自己点歌');
	if(window.musicUtil) musicUtil.pop.show(opt);
	else FloadJS('http://'+jsImgcacheDomain+'/qqcity/object_plus/musicUtil.js', function(){
		musicUtil.pop.show(opt);
	}, '', 'UTF-8');
}
*/


/*
// 显示弹出验证码框，func回调函数，参数为验证码
function showVerifyNeed(func, canfunc, opts){
	opts = opts || {};
	opts.btns = 3;
	opts.onsubmit = function(){
		showVerifyNeed._keepVerify = false;
		var v = Fid('$_pop_verify').value;
		if(!/^[0-9a-z]{4}$/i.test(v)) {
			alert('验证码输入不正确');
			return false;
		}

		FunsetModal();
		if('function' == typeof func) func(v);
	};
	opts.onclose = opts.oncancel = function(){
		FunsetModal();
		if('function' == typeof canfunc) canfunc();
	};
	createTipwin('pop_validate_op', '<p><span>验证码：</span><input type="text" id="$_pop_verify" value="输入下图中的字符，不区分大小写" class="c_2" /></p><p><img id="$_pop_verify_img" src="about:blank"  /> <button type="button" onclick="setVerifyImg(\'$_pop_verify_img\', \'$_pop_verify\', true);">换一张</button></p>', opts);
	
	Fid('pop_validate_op').style.zIndex = 501;
	swapInput(Fid('$_pop_verify'), '输入下图中的字符，不区分大小写');
	showVerifyNeed._keepVerify = true;
	setVerifyImg('$_pop_verify_img', '$_pop_verify', true);

	FsetModal('', '', '', 500, true);
}


*/

/*
function hideVerifyNeed(){
	hide(Fid('pop_validate_op'));
}*/


/*
// 播放打招呼动画
function pokeAni(k){
	loadFlashJS(function(){
		var pa = Fid('pokediv');
		if(!pa){
			pa = createDiv('');
			pa.id = 'pokediv';
			pa.style.zIndex = 1002;
		}

		pa.innerHTML = '<p id="pokeFlash">加载中...</p>';
		swfobject.embedSWF('http://'+jsImgcacheDomain+'/city_v1/swf/poke/'+k+'.swf', 'pokeFlash', '350', '260', '9.0.0', false, {}, {
			allowScriptAccess	: 'always',
			wmode	: 'transparent'
		},{
			id	: 'pokeviewer',
			name	: 'pokeviewer'
		});

		show(pa);
		FsetOffsetWindowPostionByRate(pa,2,3);
	}, function(){
		showInfoWin('播放失败，请重试');
	});
}
*/



/*
function pokeQuit(){
	var pa = Fid('pokediv');
	if(pa) {
		pa.innerHTML = '';
		hide(pa);
	}
}
*/






/*
function toShare(o, obj){
	if(!window.share){
		FloadJS('http://imgcache.qq.com/city_v1/js/app/share.js', function(){
			share.show(o, obj);
		});
	} else {
		share.show(o, obj);
	}
}
*/

//fix pgvWatchClick bug
//function pgvWatchClick(){}







/*imgUtil.js*/
var U_CITY_DOMAIN = "gongyi.qq.com";
var imgUtil = {
	notSendFeed : 0,	// 阻止非站内发活动时发送feed
	// css加载
	//_css_loaded	: 0,
	loadCss	: function(){
		if(imgUtil._css_loaded) return;
		insertCSS(Gy_Editor_SetPhotocsspath);
		imgUtil._css_loaded = 1;
	},
	_appendChilds	: function(prt, childs){
		for(var k in childs) prt.appendChild(childs[k]);
	},
	_replaceChilds	: function(prt, childs){
		imgUtil._clearChildNodes(prt);
		imgUtil._appendChilds(prt, childs);
	},
	_btnBlur	: function(){
		this.blur();
	},
	// 弹出层容器
	//_container	: null,
	//_title	: null,
	// 设置标题文字
	setTitle	: function(t){
		if(imgUtil._title) imgUtil._title.innerHTML = t;
	},
	_clearChildNodes	: function(p){
		var l = p.childNodes.length;
		for(var k = l-1; k>=0; k--) p.removeChild(p.childNodes[k]);
	},
	// 左侧导航
	//_nav	: null,
	// 操作区域
	//_canvas	: null,
	// 按钮区域
	//_footer	: null,
	// 生成容器
	getContainer	: function(){
		if(!imgUtil._container){
			var _c = FcreateElement;
			var w = document.body.insertBefore(_c('div', 'pop', { id:'pop_set_photo'}), document.body.firstChild);
			w.style.cssText = 'position:absolute;z-index:105;display:none';
			var h = _c('div', 'title');
			var ht = w.appendChild(h).appendChild(_c('div', 'tit_box'));
			// 标题文字
			imgUtil._title = ht.appendChild(_c('h4'));
			// 关闭按钮
			ht.appendChild(_c('button', 'close', {title:'关闭',onclick:function(){
				imgUtil.hide();
			}}));

			var navc = _c('div', 'nav_box');
			imgUtil._nav = navc.appendChild(_c('div', 'nav_div bg_4 bor_r_2'));
			// 左侧导航和操作区域
			imgUtil._appendChilds(w.appendChild(_c('div', 'set_photo_cont bg_5')), [navc, (imgUtil._canvas=_c('div'))]);
			// 下方按钮区域
			imgUtil._footer = w.appendChild(_c('div', 'btn bg_2 bor_t_2', { innerHTML:'<button class="bt1_2em" onclick="imgUtil.hide()">取消</button>' }));
			FenableDrag(w, h);
			imgUtil._container = w;
		}

		return imgUtil._container;
	},
	
	// 插入图片模式，应用于帖子插图等
	// opts	=> { mode: 0/*1允许相册，2允许本地，4允许网络图片*/, multi:0/*选择照片是否多选*/, callback:function( url/*多选则是元素数组，单选为元素，元素格式{url:,pre:#可能没有这个字段#}*/ ){}/*选择插入时候的回调函数*/ }
	showPicker	: function(opts){
		if(!precheck()) return;
		imgUtil.loadCss();
		opts = opts || {};
		imgUtil._album.multi = opts.multi || 0;
		imgUtil._picker.callback = opts.callback;
		var cnt = imgUtil.getContainer();
		imgUtil.setTitle('插入图片');
		imgUtil._picker.setNavList(opts.mode || 7);
		imgUtil._picker.switchTab();
	
		if(cnt.style.display == 'none'){
			setTimeout(function(){
				cnt.style.display = 'block';
				FsetOffsetWindowPostionByRate(cnt,2,2);
				FsetModal(cnt);
			}, 100);
		}
	},
	_picker	: {
		setNavList	: function(bit){
			var _c = FcreateElement;
			if(!imgUtil._picker.tablist){
				imgUtil._picker.tablist = {};
				var navs = {1 : '从相册选择图片', 2 : '从本地电脑上传', 3 : '网络图片(URL)'};
				for(var n in navs){
					imgUtil._picker.tablist[n] = [_c('button', 'bg_4 c_3', { sid : n, innerHTML : navs[n], onfocus : imgUtil._btnBlur, onclick : function(){ imgUtil._picker.switchTab(this.sid); }}), 0];
				}
			}
			
			if(!imgUtil._picker.navlist) imgUtil._picker.navlist = _c('p', 'nav_tag nav_sand');
			var p = imgUtil._picker.navlist;
			imgUtil._clearChildNodes(p);
			for(var i in imgUtil._picker.tablist){
				var s = ( bit & (1<<(i-1))) != 0;
				if(s) p.appendChild(imgUtil._picker.tablist[i][0]);
				imgUtil._picker.tablist[i][1] = s ? 1 : 0;
			}

			imgUtil._replaceChilds(imgUtil._nav, [p]);
		},
		switchTab	: function(xt){
			var tl = imgUtil._picker.tablist;
			var t = 0;
			for(var k in tl){
				tl[k][0].className = 'bg_4 c_3';
				if(tl[k][1] && (k==xt || t==0)) t = k;
			}
			if(t==0) return;
			imgUtil._picker._curTab = t;
			tl[t][0].className = 'bg_5 bor_b_2 bor_t_2 c_3';
			imgUtil._canvas.innerHTML = '正在初始化，请稍等...';
			switch(t-0){
				case 1:
					// 相册选择
					imgUtil._album.insert(imgUtil._canvas);
					break;
				case 2:
					// 本地上传至贴图相册
					imgUtil._canvas.className = 'photo_content';
					imgUtil._canvas.innerHTML = '<p class="choose_p">选一张电脑里的图片：</p><div class="input_img"><iframe name="imgutil_upload_ifr" id="imgutil_upload_ifr" frameborder="0" scrolling="no" src="'+Gy_Editor_ie6blankPath+'" style="display:none"></iframe><form id="imgutil_upload_form" method="post" enctype="multipart/form-data" target="imgutil_upload_ifr"><input type="hidden" name="uin" value="'+getUin()+'" /><input type="hidden" name="refer" value="gongyi" /> <input type="hidden" name="charset" value="utf-8" /> <input type="hidden" name="output_charset" value="utf-8" /> <input type="hidden" name="output_type" value="jsonhtml" /><input type="file" size="23" id="up_file" name="picname2" /></form></div><p class="img_type">&bull; 支持jpg、png、gif格式的图片<br/>&bull; 图片最大支持2M</p>';
					//imgUtil._canvas.innerHTML = '<p class="choose_p">选一张电脑里的图片：</p><p class="img_type">&bull; 支持jpg、png、gif格式的图片<br/>&bull; 图片最大支持2M</p>';
					break;
				case 3:
					// 网络图片引用
					imgUtil._canvas.className = 'photo_content';
					imgUtil._canvas.innerHTML = '<p class="choose_p">请输入要插入图片的网址：</p>';
					(imgUtil._picker.urlrefer = imgUtil._canvas
						.appendChild(FcreateElement('div', 'input_img'))
							.appendChild(imgUtil._picker.urlrefer || FcreateElement('input', '', { type:'text', size:30 }))
					).value = 'http://';
					break;
			}
			
			imgUtil._footer.innerHTML = '<button class="bt1_2em" onclick="imgUtil._picker.output()">插入</button> <button class="bt1_2em" onclick="imgUtil.hide()">取消</button>';
		},
		output	: function(){
			imgUtil._picker.callback = imgUtil._picker.callback || function(){};
			switch(imgUtil._picker._curTab-0){
				case 1:
					imgUtil.hide();
					imgUtil._picker.callback(imgUtil._album.getSelected());
					return;
				case 2:
					showLoadingWin('上传中...');
					var src = Fid("up_file").value;
					if(!src || src==""){
						hideLoadingWin();
						alert("请选择图片上传！");
						return false;
					}

					var type = (src.substr(src.lastIndexOf("."))).toLowerCase();
					if(!(/\.(jpg|jpeg|png|gif|bmp)/i.test(type))){
						hideLoadingWin();
						alert("您上传图片的类型不符合(.jpg|.jpeg|.gif|.png|.bmp)！");
						return false;
					}

					loadAlumbJS(function(){
						QPHOTO.domain.get(uinKey, function(d){
							Fid("imgutil_upload_ifr")._Callback = function(d){
								hideLoadingWin();
								d.data.error = d.data.error || 0;
								if(d.data.error == 0 || d.data.error == -301){
									url = d.url || d.data.url;
									imgUtil._picker.callback(imgUtil._album.multi ? [{url : url}] : {url : url});
									imgUtil.hide();
								}else{
									showResultWin("上传失败："+(d.msg||d.data.msg), 'erro');
								}
							};

							Fid("imgutil_upload_form").action = QPHOTO.domain.getUrl(uinKey, "up_common").replace(/\/cgi_upload_pic/, '/cgi_upload_illustrated');
							try{
								Fid("imgutil_upload_form").submit();
							}catch(e){
								hideLoadingWin();
								alert('请输入正确的文件路径');
							}
						}, function(){
							showResultWin("上传失败：", 'erro');
						}, 'gongyi');
					});
					return;
				case 3:
					imgUtil.hide();
					if(!imgUtil._picker.urlrefer){
						imgUtil._picker.callback(null);
					} else {
						var v = imgUtil._picker.urlrefer.value;
						if(!v || v=='http://') {
							showInfoWin('请填写图片URL');
							return;
						}
						
						imgUtil._picker.callback(imgUtil._album.multi ? [{url : v}] : {url : v});
					}
					return;
			}
			
			imgUtil.hide();
			imgUtil._picker.callback(null);
		}
	},
	// 上传图片截图模式，应用于上传头像、群组/活动LOGO 回调opts.callback参数为url地址
	// opts.mode => 1、空间相册 2、上传 4、校友
	showCutter	: function(opts){
		if(!precheck()) return;
		imgUtil.loadCss();
		imgUtil._album.multi = 0;
		opts = opts || {};
		var dmode = 3;
		if(opts.module=='photo') dmode = 7;
		opts.mode = opts.mode || dmode;
		if((opts.mode&2) && (!opts.module || !opts.id)) opts.mode = opts.mode & 5;
		imgUtil._cutter.cfg = opts;
		var cnt = imgUtil.getContainer();
		imgUtil.setTitle('上传图片');
		imgUtil._cutter.setNavList(opts.mode);
		imgUtil._cutter.switchTab((opts.mode&1)?'album':((opts.mode&2)?'upload':'xiaoyou'));
	
		if(cnt.style.display == 'none'){
			setTimeout(function(){
				cnt.style.display = 'block';
				FsetOffsetWindowPostionByRate(cnt,2,2);
				FsetModal(cnt);
			}, 100);
		}
	},
	_cutter	: {
		setNavList	: function(bit){
			var _c = FcreateElement;
			imgUtil._cutter.tablist = {};
			if(bit&3) {
				var p = _c('p', 'nav_tag');
				var l = {
					1 : ['album', '从空间相册上传'],
					2 : ['upload', '从本地电脑上传']
				};
				for(var i in l){
					if(bit|i) imgUtil._cutter.tablist[l[i][0]] = p.appendChild(_c('button', 'bg_4 c_3', { tab : l[i][0],innerHTML:l[i][1], onfocus:imgUtil._btnBlur, onclick:function(){ imgUtil._cutter.switchTab(this.tab) }}));
				}

				imgUtil._replaceChilds(imgUtil._nav, [
					_c('h5', 'sand_img', { innerHTML : '使用自选头像' }),
					_c('h6', 'slect_img', { innerHTML : '1、选择图片' }),
					p,
					imgUtil._cutter.tablist['edit'] = _c('h6', 'edit_img', { innerHTML : '2、编辑图片'})
				]);
			}
			
			if(bit&4) {
				imgUtil._cutter.tablist['xiaoyou'] = imgUtil._nav
					.appendChild(_c('h5', 'qqxiaoyou_img'))
						.appendChild(_c('button', '', { innerHTML:'<span class="txt_fw">使用QQ校友头像</span>',onfocus:imgUtil._btnBlur, onclick:function(){ imgUtil._cutter.switchTab('xiaoyou') } }));
			}
		},
		next	: function(){
			switch(imgUtil._cutter._curTab){
				case 'album':
					var o = imgUtil._album.getSelected();
					if(!o) return showInfoWin('请选择照片');
					imgUtil._cutter.ordUrl = o.url;
					imgUtil._cutter.switchTab('edit');
					break;
				case 'upload':
					window.imageUploaderCb = function(o){
						window.imageUploaderCb = null;
						hideLoadingWin();
						if(o && o.errno==0 && o.data){
							imgUtil._cutter.ordUrl = o.data+'?r='+Math.random();
							imgUtil._cutter.switchTab('edit');
							return;
						} else if(o&&o.errno!=0){
							var emap = {
								1	: '您还没有登录',
								2	: '请勿非法提交',
								3	: '您没有权限更新图片',
								102	: '上传图片太大，请换个图片上传',
								104	: '只接受jpg、png、gif格式的图片，请换个图片上传',
								1001	: '上传图片太大，请换个图片上传',
								105	: '处理图像失败，请重新上传',
								106	: '只接受jpg、png、gif格式的图片，请换个图片上传',
								10	: '视频头像正在审核中，暂时不能更新图片'
							};
							if((o.errno-0) in emap){
								alert(emap[o.errno-0]);
								return;
							}
						}
						alert('上传图片失败，请重新上传');
					};
					var f=Fid('set_photo_form');
					if(!f.photo.value){
						alert('请选择文件');
						return false;
					}
					showLoadingWin('正在上传...');
					f.submit();
					break;
				case 'edit'://设置修改后保存修改的图片信息
					imgUtil._cutter.callback = imgUtil._cutter.cfg.callback || function(){};
					var m = imgUtil._cutter.cfg.module;
					var str = '';
					if(m=='photo') str = '确认设置该图片为城市达人头像吗？提交后需要审核才能使用';
					else if(m=='group') str = '确认设置该图片为兴趣组图片吗？提交后需要审核才能使用';
					else if(m=='action'||m=='actonline') str = '确认设置该图片为活动图片吗？';
					else str = '确认提交吗？';
					showConfirmWin(str, function(){
						thisMovie('PhotoEditor').saveToServer('http://'+U_CITY_DOMAIN+'/json.php?mod=pic&act=photo&nofeed='+imgUtil.notSendFeed+'&from='+m+'&id='+imgUtil._cutter.cfg.id+'&');
					});
					break;
				case 'xiaoyou':
					imgUtil._cutter.callback = imgUtil._cutter.cfg.callback || function(){};
					// 只有达人头像用
					showConfirmWin('确认设置该图片为城市达人头像吗？', function(){
						if(!imgUtil._cutter._xy) return alert('数据错误，无法提交');
						postForm('http://'+U_CITY_DOMAIN+'/post.php?mod=pic&act=uploadxyphoto&callback=uploadXYPhotoCallback', imgUtil._cutter._xy);
					});
					break;
			}
		},
		setXYParam	: function(bigUrl, smallUrl, hash){
			if(!bigUrl || !smallUrl || !hash) imgUtil._cutter._xy = null;
			imgUtil._cutter._xy = {
				xybig	: bigUrl,
				xysmall	: smallUrl,
				hash	: hash
			};
		},
		// 底部按钮
		_ftBtns	: function(arg){
			arg = arg || {};
			var htm = [];
			if(arg.repick) htm.push('<button class="bt1_4em" onclick="imgUtil._cutter.switchTab(\'album\')">重选照片</button>');
			htm.push('<button class="bt1_4em" onclick="'+(arg.close?'imgUtil.hide()':'imgUtil._cutter.next()')+'"'+(arg.ok?'':' disabled="disabled"')+'>确认</button>');
			htm.push('<button class="bt1_4em" onclick="imgUtil.hide()">取消</button>');
			imgUtil._footer.innerHTML = htm.join(' ');
		},
		switchTab	: function(t){
			imgUtil._cutter.setXYParam();
			if(t=='edit' && !imgUtil._cutter.ordUrl) return;
			var tl = imgUtil._cutter.tablist;
			var _c = FcreateElement;
			imgUtil._canvas.innerHTML = '正在初始化，请稍等...';
			for(var k in tl){
				if(k=='edit') tl[k].className = 'edit_img bor_b_2';
				else if(k=='xiaoyou') {
					tl[k].className = 'c_3';
					if(tl[k].parentNode) tl[k].parentNode.className = 'qqxiaoyou_img';
				} else tl[k].className = 'bg_4 c_3';
			}
			
			imgUtil._cutter._curTab = t;
			imgUtil._cutter._ftBtns({ok:1, cancel:1});
			switch(t){
				case 'upload':
					// 本地上传
					tl[t].className = 'bg_5 bor_t_2 bor_b_2 c_3';
					imgUtil._canvas.className = 'photo_content';
					imgUtil._canvas.innerHTML = '<p class="choose_p">选一张电脑里的图片：</p><div class="input_img"><iframe name="set_photo_ifr" id="set_photo_ifr" frameborder="0" scrolling="no" src="'+Gy_Editor_ie6blankPath+'" style="display:none"></iframe><form id="set_photo_form" action="http://'+U_CITY_DOMAIN+'/post.php?mod=pic&act=uploadfile&callback=imageUploaderCb" method="post" enctype="multipart/form-data" target="set_photo_ifr" onsubmit="return imgUtil.validatePhotoForm(this, Fid(\'set_photo_ifr\'))"><input type="hidden" name="from" value="'+imgUtil._cutter.cfg.module+'" /><input type="hidden" name="id" value="'+imgUtil._cutter.cfg.id+'" /><input type="file" size="23" name="photo" /></form></div><p class="img_type">&bull; 支持jpg、png、gif格式的图片<br/>&bull; 图片最大支持2M</p>';
					//imgUtil._canvas.innerHTML = '<p class="choose_p">选一张电脑里的图片：</p><div class="input_img"><iframe name="set_photo_ifr" id="set_photo_ifr" frameborder="0" scrolling="no" src="http://gongyi.qq.com/qqcity/object_plus/ie6blank.html" style="display:none"></iframe><form id="set_photo_form" action="http://xaup.photo.qq.com/cgi-bin/upload/cgi_upload_illustrated?mod=pic&act=uploadfile&callback=imageUploaderCb" method="post" enctype="multipart/form-data" target="set_photo_ifr" onsubmit="return imgUtil.validatePhotoForm(this, Fid(\'set_photo_ifr\'))"><input type="hidden" name="from" value="'+imgUtil._cutter.cfg.module+'" /><input type="hidden" name="id" value="'+imgUtil._cutter.cfg.id+'" /><input type="file" size="23" name="photo" /></form></div><p class="img_type">&bull; 支持jpg、png、gif格式的图片<br/>&bull; 图片最大支持2M</p>';
					//http://xaup.photo.qq.com/cgi-bin/upload/cgi_upload_illustrated
					break;
				case 'edit':
					// 编辑
					imgUtil._canvas.className = 'flash_content';
					tl[t].className = 'edit_img bg_5 bor_t_2 bor_b_2';
					imgUtil._canvas.innerHTML = '<div id="imgUtil_flash_ctrl">正在加载图片编辑器，如果您的电脑没有安装flash插件，请先安装</div>';
					imgUtil._cutter._ftBtns({repick:1, ok:0, cancel:1});
					loadFlashJS(function(){
						swfobject.embedSWF('http://imgcache.qq.com/qzone/city/swf/PhotoEditor.swf', 'imgUtil_flash_ctrl', FBrowser.isIE6||FBrowser.isFirefox?'322':'322', '312', '9.0.0', false, {
							imageEncoder	: 'jpg',
							jpgQuality		: 100,
							slice_width		: imgUtil._cutter.cfg.ow || 200,
							slice_height	: imgUtil._cutter.cfg.oh || 200,
							onError			: 'flashTips',
							defaultText		: ''
						}, {
							allowScriptAccess	: 'always',
							wmode	: 'transparent'
						},{
							id	: 'PhotoEditor',
							name	: 'PhotoEditor'
						});

						imgUtil.flashLoadUrl(imgUtil._cutter.ordUrl);
					}, function(){
						imgUtil._canvas.innerHTML = '无法启动图片编辑器';
					});
					break;
				case 'xiaoyou':
					tl[t].className = '';
					if(tl[t].parentNode) tl[t].parentNode.className = 'qqxiaoyou_img  bg_5 bor_t_2 bor_b_2';
					imgUtil._canvas.className = 'xiaoyou_img_cont';
					imgUtil._canvas.innerHTML = '正在读取你的校友头像...';
					imgUtil._cutter._ftBtns({ok:0, cancel:1});
					FloadJSON('http://'+U_CITY_DOMAIN+'/json.php?mod=pic&act=getxyphoto&callback=loadXYPhoto&r='+Math.random(), function(o){
						if(imgUtil._cutter._curTab != 'xiaoyou') return;
						if(o&&o.errno==0){
							imgUtil._canvas.innerHTML = '<p class="user_img_1"><img src="'+o.bigUrl+'" alt="校友头像" /></p><p class="tips c_2">使用通过审核的QQ校友头像作为城市达人头像不需要再次审核</p>';
							imgUtil._cutter.setXYParam(o.bigUrl, o.smallUrl, o.hash);
							imgUtil._cutter._ftBtns({ok:1, cancel:1});
						} else {
							var str = '';
							if(o&&o.errno==2005){
								str = '很抱歉，你还不是QQ校友用户，无法使用QQ校友头像作为城市达人头像';
							} else if(o&&o.errno==2007){
								str = '很抱歉，未经审核通过的QQ校友头像无法作为城市达人头像使用';
							} else {
								str = '系统繁忙，请稍候再试';
							}

							imgUtil._canvas.innerHTML = '<p class="user_img_1"><img src="http://imgcache.qq.com/city_v1/img/global_img_user_default3.jpg" alt="校友头像" /></p><p class="tips c_9">'+str+'</p>';
							imgUtil._cutter._ftBtns({ok:1, close:1, cancel:1});
						}
					}, null, 'UTF-8', 'loadXYPhoto');
					break;
				default:
					imgUtil._cutter._curTab = 'album';
					imgUtil._canvas.className = 'photo_content';
					tl['album'].className = 'bg_5 bor_t_2 bor_b_2 c_3';
					// 相册选择
					imgUtil._album.insert(imgUtil._canvas);
					break;
			}
		}
	},
	// #######相册选择
	_album	: {
		//multi	: 0,
		insert	: function(prt){
			prt.className = 'choose_photo';
			var s = FcreateElement('div', 'select_photo');
			s.appendChild(imgUtil._album.getSelectCtrl());
			s.appendChild(FcreateElement('span', '', { innerHTML:'只能选择QQ空间公开相册' }));
			imgUtil._replaceChilds(prt, [s, imgUtil._album.getListCtrl()]);
			imgUtil._album.setAlbumList();
		},
		changeAlbum	: function(){
			var id = this.value;
			var l = imgUtil._album.getListCtrl();
			if(!id) return setTips(l, '请选择相册');
			setLoading(l);
			
			PhotoLogic.getPhotoList({uin:uinKey,aid:id,callBack:function(obj){
				imgUtil._album._photos = {};
				l.innerHTML = '';
				if(obj.photos.length<=0){
					setTips(l, '该相册无照片');
					return;
				}

				for(var i in obj.photos){
					var t = FcreateElement('li', '', {
						ordurl	: obj.photos[i].url,
						pre	: obj.photos[i].pre
					});

					imgUtil._album._photos[i] = [t, l.appendChild(t)
						.appendChild(FcreateElement('a', 'user_img_3', {
						title	: obj.photos[i].name,
						href	: '#',
						i	: i,
						onfocus	: function(){ this.blur(); },
						onclick	: function(){ imgUtil._album.selectPhoto(this.i);return false; }
					}))
							.appendChild(FcreateElement('img', '', {
						orgsrc	: obj.photos[i].pre,
						src	: 'about:blank', //这里人拉取相册图像的时候默认小图片
						alt	: obj.photos[i].name
					}))];
				}
				
				imgUtil._album._showPhotoInView();
				l.onscroll = l.offsetHeight<l.scrollHeight ? imgUtil._album._showPhotoInView : null;
				if(!imgUtil._album.multi) imgUtil._album.selectPhoto(0);
			},errBack:function(){
				setTips(imgUtil._album.getListCtrl(), '加载照片列表失败！');
			}})
		},
		_showPhotoInView	: function(){
			if(imgUtil._album._timeout) clearTimeout(imgUtil._album._timeout);
			imgUtil._album._timeout = setTimeout(imgUtil._album._c_showPhotoInView, 100);
		},
		_c_showPhotoInView	: function(){
			var l = imgUtil._album.getListCtrl();
			var t = l.scrollTop;
			var b = t+l.offsetHeight;
			var p = imgUtil._album._photos;
			for(var k in p){
				if(p[k][1].orgsrc && p[k][0].offsetTop<b && (p[k][0].offsetTop+p[k][0].offsetHeight)>t) {
					p[k][1].src = p[k][1].orgsrc;
					p[k][1].orgsrc = null;
				}
			}
		},
		_unselect	: function(i){
			var x = imgUtil._album._photos[i];
			if(x && x[0].lastChild && x[0].lastChild.className=='checked_img'){
				x[0].removeChild(x[0].lastChild);
				x[2] = 0;
			}
		},
		getSelected	: function(){
			var arr = [];
			for(var i in imgUtil._album._photos){
				var _ = imgUtil._album._photos[i];
				_[2] && arr.push({ url: _[0].ordurl,pre: _[0].pre});
			}
			if(imgUtil._album.multi) return arr;
			if(arr.length>0) return arr[0];
			return null;
		},
		selectPhoto	: function(i){
			var p = imgUtil._album._photos;
			if(!p || !(i in p)) return;

			// 单选取消之前选择的
			if(!imgUtil._album.multi && imgUtil._album._lastSel!=null){
				imgUtil._album._unselect(imgUtil._album._lastSel);
			}
			// 多选模式重复点则取消
			if(p[i][2] && imgUtil._album.multi){
				imgUtil._album._unselect(i);
			} else {
				if(imgUtil._album.multi){
					var s = imgUtil._album.getSelected();
					if(s.length>=10) {
						return alert('最多只能选10张照片');
					}
				}
				p[i][0].appendChild(FcreateElement('span', 'checked_img', {innerHTML:'<sup>选中</sup>'}));
				p[i][2] = 1;
			}
			imgUtil._album._lastSel = i;
		},
		getSelectCtrl : function(){
			if(!imgUtil._album._selectCtrl){
				imgUtil._album._selectCtrl = FcreateElement('select', '', {innerHTML:'<option value="-1">loading...</option>', onchange : imgUtil._album.changeAlbum});
				loadAlumbJS(function(){
					PhotoLogic.getAlbumList({uin:uinKey,callBack:function(obj){
						var l = imgUtil._album.getSelectCtrl();
						var lx = { '':'--相册目录--'};
						for(var i in obj.albums){
							lx[obj.albums[i]['id']] = FxmlDecode(obj.albums[i]['name']);
						}
						setListOfSelect(l, lx);
						imgUtil._album._albumlist = lx;
					},errBack:function(){
						imgUtil._album.getListCtrl().innerHTML = '加载相册列表失败！';
					},type:1});
				});
			}

			return imgUtil._album._selectCtrl;
		},
		setAlbumList	: function(){
			if(!imgUtil._album._albumlist) return;
			setListOfSelect(imgUtil._album.getSelectCtrl(), imgUtil._album._albumlist);
		},
		getListCtrl	: function(){
			return (imgUtil._album._listCtrl = imgUtil._album._listCtrl || FcreateElement('ul', 'select_ul'));
		}
	},
	_retryflash	: 0,
	flashLoadUrl	: function(url){
		var p = thisMovie('PhotoEditor');
		if(!p) { imgUtil._retryflash++;return;}
		if(!p.loadImage){
			if(imgUtil._retryflash > 10) {
				imgUtil._canvas.innerHTML = '加载图片编辑器超时...';
				imgUtil._retryflash=0;
				return;
			}
			setRunTimeout(imgUtil.flashLoadUrl, 500, url);
			imgUtil._retryflash ++;
			return;
		}

		imgUtil._retryflash=0;
		if(imgUtil._cutter._curTab!='edit') return;
		p.loadImage(url);
		imgUtil._footer.innerHTML = '<button class="bt1_4em" onclick="imgUtil._cutter.switchTab(\'album\')">重选照片</button> <button class="bt1_2em" onclick="imgUtil._cutter.next()">确认</button> <button class="bt1_2em" onclick="imgUtil.hide()">取消</button>';
	},
	// #######相册选择
	hide	: function(){
		imgUtil._container.style.display = 'none';
	},

	validatePhotoForm	: function(photoForm, photoIfr){
		if(FBrowser.isIE6){
			photoIfr.ie6callback = function(){
				photoForm.submit();
			};
			photoIfr.src = Gy_Editor_ie6blankPath;
			return false;
		}
	}
};

function flashError(e){
	var code = FtoInt((''+e.code).replace(/[^0-9]/g, ''));
	if(code==0) return;
	if(code!=1057&&code!=1058){
		imgUtil.hide();
	}
	if(code==2000){
		imgUtil._cutter.callback(e.data);
		return;
	}
	if(code!=0 && code<2000 && code!=1057 && code!=1058){
		showInfoWin(e.msg);
	} else if(code!=0){
		var emap = {
			2001	: '抱歉，您没有登录或者登录态过期，请重新登录',
			2002	: '请勿非法提交',
			2003	: '您没有提交图片的权限',
			2005	: '您没有权限更新图片',
			2030	: '之前的图片正在审核中，暂时不能更新图片',
			1057	: '您传过来的图片尺寸不对，格式必须大于200*200的图片',
			1058	: '您上传的图片是空白'
		};

		if(code==2001) {
			return cityLoginForm();
		}
		
		if((code-0) in emap){
			showInfoWin(emap[code-0]);
		} else {
			showInfoWin('系统繁忙，请稍候再试');
		}
	}
};

function uploadXYPhotoCallback(o){
	imgUtil.hide();
	if(o&&o.errno==0){
		o.data.isXY = 1;
		imgUtil._cutter.callback(o.data);
		return;
	} else if(o){
		var emap = {
			16	: '之前的图片正在审核中，暂时不能更新图片'
		};

		if(o.errno==1) return cityLoginForm();
		if((o.errno-0) in emap) return showInfoWin(emap[o.errno-0]);
	}
	
	showInfoWin('系统繁忙，请稍候再试');
}


























/*other js build to penwang*/

/*验证QQ号*/
function validateUin(uin){
	return /^[1-9]\d{4,11}$/.test(uin);
}

function getUin(){
	var uin = FgetCookie("uin");
	uin = FtoInt(uin.replace(/^o(0)*/,''));
	return validateUin(uin) ? uin : false;
}


function isLogon(){
	return !!getUin();
	//return $.Tjs_getCookie("uin") && $.Tjs_getCookie("skey");
}

function precheck(){
	if(!isLogon()){
		return false;
	}
	return true;
}


/*验证url*/
function checkURL(url){
	var urlpt = /^(https?:\/\/|ftp:\/\/)?(([a-z0-9\-]*\.)+([a-z]{2}|aero|arpa|biz|com|coop|edu|gov|info|int|jobs|mil|museum|name|nato|net|org|pro|travel)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(\/[a-z0-9_\-\.~]+)*(\/([a-z0-9_\-\.]*)(\?[a-z0-9+_\-\.%=&amp;\/]*)?)?(#[a-z][a-z0-9+_\-\.%=&amp;\/]*)?$/i;
	return urlpt.test(url);
}



/**
 * id 元素id list 数据列表
 * epval 空值选项，指定即添加，否则不添加这项 eptxt 空值选项的文字
 * 支持的情况下replaceHead为true，则将epval替换数据第一项
 */
function setListOfSelect(id, list, epval, eptxt, replaceHead){
	FclearOptionsOfSelect(id);
	if(epval != null && eptxt != null){
		FaddOptionToSelect(id, eptxt, epval);
	}
	var t = null;;
	if(replaceHead == true) {
		t = list[0];
		delete list[0];
	}
	FaddOptionsToSelect(id, list);
	if(replaceHead == true) {
		list[0] = t;
	}
}


var uinKey = getUin();

/*
var ed = createEditor('editor');
ed.height = '360';
ed.onfocus = showCheckWord;
ed.enableMusic = 0;
ed.build();
*/


/*  |xGv00|7162cdf756be2571f4795d7fbde225a3 */